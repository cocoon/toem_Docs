{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 Welcome to The Open Endpoint Manager, a solution that provides a full suite of Windows management capabilities as well as computer inventory, custom asset management, and reporting. Theopenem is an on-premises solution, all servers and data remain within your organization. In terms of features and capabilities, it resembles products such as SCCM, PDQ, Desktop Central, KACE, and the list goes on. For a full list of features, check out https://theopenem.com/features . How It Works \u00b6 Like many software applications, Theopenem consists of a Server side application and a Client side application. The Server side application (\"Toems\") was developed using C# and the .NET framework. This enables easy installation on Windows Servers with IIS. Toems consists of three separate Web Applications that scale to meet the needs of any size organization. By separating the Server components into 3 Web Applications, this provides maximum flexibility and security by only exposing the required components to the correct people or endpoints. The Client agent application (\"Toec\") is a Windows Service that is installed on each endpoint you wish to manage. The agent is available in both 32 and 64 bit MSI format to enable simple deployment using GPO, cmd line install, or any other deployment application that supports MSI's. The use of an endpoint agent, gives the greatest amount of control and reporting over the endpoints without the need to enable SMB shares or ADMIN shares. All communication b/w the client and server use the HTTP or HTTPS protocols. After Theopenem Servers and Endpoints are installed and configured, they will check-in with the Server on a predefined customizable schedule (60 minutes by default). Upon check-in, the server will return any policies that are applicable to the Endpoint at that moment. The client will run the policies and then check-in with the server in another 60 minutes to see if any new policies have been added. Therefore an endpoint is constantly looking for policies to run on an interval schedule defined by the server. If a policy needs to run immediately, A Theopenem administrator can force the endpoints to check-in at any time, instead of waiting for the next check-in interval to elapse. Server Requirements (Toems) \u00b6 Hardware \u00b6 CPU requirements align with the requirements of the OS Solid State Disks are recommended by not required, storage capacity should align with the OS requirements plus enough to store the applications that will be deployed. Memory is the most difficult requirement to assess. It depends on many factors, such as how many Servers will be used to distribute the load, if the database is local or remote, the amount of endpoints within the organization, and the number of policies defined in Theopenem. 8GB is typically enough with 16GB (possibly more) of memory being the recommended number. Software \u00b6 The following operating systems are supported: Server 2012R2 Server 2016 Server 2019 Note Toems requires a 64-bit Windows Server OS with .NET Framework 4.6 or newer installed. Database Requirements \u00b6 Theopenem supports the following databases: MariaDB 10.2 or greater MySQL 5.7 or greater Microsoft SQL Server 2012 or greater If you have an existing database cluster with any of the above mentioned applications, you can use it. Otherwise, you can create a new server, either on your Application Server or a separate server. The database server should have a minimum of 8 GB ram. A database that's run on a server that is separate from Theopenem is recommended SQL Express is not supported. Client Requirements (Toec) \u00b6 Supported OS's include: Windows 7 Windows 8/8.1 Windows 10 Toec can be installed on both 32-bit and 64-bit architectures. Like Toems, it also requires .NET framework 4.6 or newer be installed on the OS. There are no specific CPU, Hard Drive, or Memory requirements. Bandwidth Requirements / Network Impact \u00b6 Determining the impact on your network also varies depending on your individual Theopenem setup. Factors such as the number of endpoints, how often the endpoints check-in, the number of Servers, and the number of polices and modules defined in Theopenem all contribute to the impact on the network. The following example demonstrates the data utilized from a single endpoint. A new endpoint registers with Theopenem, all required certificates are exchanged and an encryption key is exchanged b/w server and endpoint. The total data sent from the client to the server and back to the client is approximately 14KB. An hour later the endpoint checks-in and has found 3 active policies. The policies are set to run an inventory scan, start tracking user logins, and start tracking application usage. The total data transferred is approximately 70KB, this number will vary depending on the size of the inventory scan. An hour later the endpoint checks-in again and no active policies are found. This time only approximately 5KB are transferred. This means that registering a new endpoint and scanning it's inventory only uses about 100KB, and 5KB every hour after that, assuming no more policies need to run. To put this in perspective, a single visit to Google with no caching, at the time of this writing was approximately 400KB. To summarize, the amount of data transferred by Theopenem on an hourly bases, is typically less than a user loading a single web page. However, this changes significantly if a policy is deploying a software application. When deploying software, the full size of the application will be transferred, this could be in the hundreds of MB or even GB. To mitigate network problems with large software deployments and a large number of endpoints, Theopenem has built-in throttling. Each Theopenem server can have a maximum number of connections as well as a maximum bitrate per connection. Each server can have different values providing flexibility depending on the power of that specific server. As a final example, A Theopenem server could set a maximum of 20 connections at 5Mb per connection, limiting the network performance of that server to 100Mbps. Endpoint Impact \u00b6 The Toec service continuously runs in the background on the endpoint. While idle, it typically uses b/w 30MB and 50MB of RAM. It will increase depending on actions needed by the policy and will eventually stabilize back to around 30MB and 50MB. An additional application named Toec-UI will also run for each user at login. This is required to run policies at user login or send messages to the endpoints. This application typically uses around 10MB of RAM. AntiVirus \u00b6 It may be necessary to whitelist the installer MSI for the Toec agent or even the directory for Toec after it's installed. Toec is installed in c:\\program files\\toec. If Toec is not functioning properly, be sure your antivirus solution isn't blocking anything. Security \u00b6 Theopenem was designed with security in mind. While no product is invulnerable to attackers, it was designed using various implementations of industry standards such as OAuth 2.0, HMAC authentication, Certificate authentication and encryption. The Server is comprised of 3 separate Web Applications allowing you control over which components should be accessible to what users. For example, the management of Theopenem is contained within the Toems-UI and Toems-API. These two applications can be firewalled off to only users that need access to the system. The endpoints only ever need to communicate with the Toec-API. Authentication to the Toems-API is achieved through OAuth 2.0 bearer tokens which are only valid for 1 hour, in addition, users are locked out for 15 minutes after too many failed login attempts, mitigating brute force attacks. The body of all communications b/w the client and server are encrypted using a combination of device certificates and encryption keys. If SSL is setup on the Web Servers, the headers will also be encrypted, as well as the body for a second time. Commands from the server to each endpoint are signed using a CA-Intermediate-Device Certificate chain ensuring the client will only run commands originating from your servers. Recommended Topology \u00b6 The recommended server topology involves the use of 5 servers. It's just a recommendation, you can run everything off a single server if you must, or anything in between. Application Server 1 - This application server runs all 3 required web applications. Application Server 2 - This application server runs all 3 required web applications. Database Server - Runs the backend database that both the Toems-API and Toec-API communicate with. File Share - When more than one Toec-API or Toems-API server is installed, data replication must occur b/w the servers. An SMB file share is used for this purpose. The Toec agent does not communicate with this server. You can use any existing File Server for this purpose. If only a single Toec-API and Toems-API are used in your topology, the File Share is not needed. DMZ Toec-API (Optional) - A Toec-API server can be setup in your DMZ to allow management of endpoints when they are offsite. This server should only run the Toec-API, you should never allow Toems-API or Toems-UI access from the outside. Each application server should be dedicated to Theopenem and not shared with other web applications or services. The database server and file share can be on shared resources. The Toec-API should never go through a load balancer. Load balancing and failover of the Toec-API is built into the Toec agent. Running the Toec-API through a load balancer could lead to authentication failures. The diagram below shows the traffic flow among these services.","title":"Welcome"},{"location":"#welcome","text":"Welcome to The Open Endpoint Manager, a solution that provides a full suite of Windows management capabilities as well as computer inventory, custom asset management, and reporting. Theopenem is an on-premises solution, all servers and data remain within your organization. In terms of features and capabilities, it resembles products such as SCCM, PDQ, Desktop Central, KACE, and the list goes on. For a full list of features, check out https://theopenem.com/features .","title":"Welcome"},{"location":"#how-it-works","text":"Like many software applications, Theopenem consists of a Server side application and a Client side application. The Server side application (\"Toems\") was developed using C# and the .NET framework. This enables easy installation on Windows Servers with IIS. Toems consists of three separate Web Applications that scale to meet the needs of any size organization. By separating the Server components into 3 Web Applications, this provides maximum flexibility and security by only exposing the required components to the correct people or endpoints. The Client agent application (\"Toec\") is a Windows Service that is installed on each endpoint you wish to manage. The agent is available in both 32 and 64 bit MSI format to enable simple deployment using GPO, cmd line install, or any other deployment application that supports MSI's. The use of an endpoint agent, gives the greatest amount of control and reporting over the endpoints without the need to enable SMB shares or ADMIN shares. All communication b/w the client and server use the HTTP or HTTPS protocols. After Theopenem Servers and Endpoints are installed and configured, they will check-in with the Server on a predefined customizable schedule (60 minutes by default). Upon check-in, the server will return any policies that are applicable to the Endpoint at that moment. The client will run the policies and then check-in with the server in another 60 minutes to see if any new policies have been added. Therefore an endpoint is constantly looking for policies to run on an interval schedule defined by the server. If a policy needs to run immediately, A Theopenem administrator can force the endpoints to check-in at any time, instead of waiting for the next check-in interval to elapse.","title":"How It Works"},{"location":"#server-requirements-toems","text":"","title":"Server Requirements (Toems)"},{"location":"#hardware","text":"CPU requirements align with the requirements of the OS Solid State Disks are recommended by not required, storage capacity should align with the OS requirements plus enough to store the applications that will be deployed. Memory is the most difficult requirement to assess. It depends on many factors, such as how many Servers will be used to distribute the load, if the database is local or remote, the amount of endpoints within the organization, and the number of policies defined in Theopenem. 8GB is typically enough with 16GB (possibly more) of memory being the recommended number.","title":"Hardware"},{"location":"#software","text":"The following operating systems are supported: Server 2012R2 Server 2016 Server 2019 Note Toems requires a 64-bit Windows Server OS with .NET Framework 4.6 or newer installed.","title":"Software"},{"location":"#database-requirements","text":"Theopenem supports the following databases: MariaDB 10.2 or greater MySQL 5.7 or greater Microsoft SQL Server 2012 or greater If you have an existing database cluster with any of the above mentioned applications, you can use it. Otherwise, you can create a new server, either on your Application Server or a separate server. The database server should have a minimum of 8 GB ram. A database that's run on a server that is separate from Theopenem is recommended SQL Express is not supported.","title":"Database Requirements"},{"location":"#client-requirements-toec","text":"Supported OS's include: Windows 7 Windows 8/8.1 Windows 10 Toec can be installed on both 32-bit and 64-bit architectures. Like Toems, it also requires .NET framework 4.6 or newer be installed on the OS. There are no specific CPU, Hard Drive, or Memory requirements.","title":"Client Requirements (Toec)"},{"location":"#bandwidth-requirements-network-impact","text":"Determining the impact on your network also varies depending on your individual Theopenem setup. Factors such as the number of endpoints, how often the endpoints check-in, the number of Servers, and the number of polices and modules defined in Theopenem all contribute to the impact on the network. The following example demonstrates the data utilized from a single endpoint. A new endpoint registers with Theopenem, all required certificates are exchanged and an encryption key is exchanged b/w server and endpoint. The total data sent from the client to the server and back to the client is approximately 14KB. An hour later the endpoint checks-in and has found 3 active policies. The policies are set to run an inventory scan, start tracking user logins, and start tracking application usage. The total data transferred is approximately 70KB, this number will vary depending on the size of the inventory scan. An hour later the endpoint checks-in again and no active policies are found. This time only approximately 5KB are transferred. This means that registering a new endpoint and scanning it's inventory only uses about 100KB, and 5KB every hour after that, assuming no more policies need to run. To put this in perspective, a single visit to Google with no caching, at the time of this writing was approximately 400KB. To summarize, the amount of data transferred by Theopenem on an hourly bases, is typically less than a user loading a single web page. However, this changes significantly if a policy is deploying a software application. When deploying software, the full size of the application will be transferred, this could be in the hundreds of MB or even GB. To mitigate network problems with large software deployments and a large number of endpoints, Theopenem has built-in throttling. Each Theopenem server can have a maximum number of connections as well as a maximum bitrate per connection. Each server can have different values providing flexibility depending on the power of that specific server. As a final example, A Theopenem server could set a maximum of 20 connections at 5Mb per connection, limiting the network performance of that server to 100Mbps.","title":"Bandwidth Requirements / Network Impact"},{"location":"#endpoint-impact","text":"The Toec service continuously runs in the background on the endpoint. While idle, it typically uses b/w 30MB and 50MB of RAM. It will increase depending on actions needed by the policy and will eventually stabilize back to around 30MB and 50MB. An additional application named Toec-UI will also run for each user at login. This is required to run policies at user login or send messages to the endpoints. This application typically uses around 10MB of RAM.","title":"Endpoint Impact"},{"location":"#antivirus","text":"It may be necessary to whitelist the installer MSI for the Toec agent or even the directory for Toec after it's installed. Toec is installed in c:\\program files\\toec. If Toec is not functioning properly, be sure your antivirus solution isn't blocking anything.","title":"AntiVirus"},{"location":"#security","text":"Theopenem was designed with security in mind. While no product is invulnerable to attackers, it was designed using various implementations of industry standards such as OAuth 2.0, HMAC authentication, Certificate authentication and encryption. The Server is comprised of 3 separate Web Applications allowing you control over which components should be accessible to what users. For example, the management of Theopenem is contained within the Toems-UI and Toems-API. These two applications can be firewalled off to only users that need access to the system. The endpoints only ever need to communicate with the Toec-API. Authentication to the Toems-API is achieved through OAuth 2.0 bearer tokens which are only valid for 1 hour, in addition, users are locked out for 15 minutes after too many failed login attempts, mitigating brute force attacks. The body of all communications b/w the client and server are encrypted using a combination of device certificates and encryption keys. If SSL is setup on the Web Servers, the headers will also be encrypted, as well as the body for a second time. Commands from the server to each endpoint are signed using a CA-Intermediate-Device Certificate chain ensuring the client will only run commands originating from your servers.","title":"Security"},{"location":"#recommended-topology","text":"The recommended server topology involves the use of 5 servers. It's just a recommendation, you can run everything off a single server if you must, or anything in between. Application Server 1 - This application server runs all 3 required web applications. Application Server 2 - This application server runs all 3 required web applications. Database Server - Runs the backend database that both the Toems-API and Toec-API communicate with. File Share - When more than one Toec-API or Toems-API server is installed, data replication must occur b/w the servers. An SMB file share is used for this purpose. The Toec agent does not communicate with this server. You can use any existing File Server for this purpose. If only a single Toec-API and Toems-API are used in your topology, the File Share is not needed. DMZ Toec-API (Optional) - A Toec-API server can be setup in your DMZ to allow management of endpoints when they are offsite. This server should only run the Toec-API, you should never allow Toems-API or Toems-UI access from the outside. Each application server should be dedicated to Theopenem and not shared with other web applications or services. The database server and file share can be on shared resources. The Toec-API should never go through a load balancer. Load balancing and failover of the Toec-API is built into the Toec agent. Running the Toec-API through a load balancer could lead to authentication failures. The diagram below shows the traffic flow among these services.","title":"Recommended Topology"},{"location":"advanced/toec-arguments/","text":"Toec Advanced Options \u00b6 1. Advanced Installation Arguments \u00b6 There are a few extra arguments that can be passed in during the installation of Toec, or embedded into the MST file. Reinstalling the MSI with any of these options will also overwrite the current value without changing anything that is not specified. LOG_LEVEL \u2013 The default logging level of Toec is INFO . To get more information, DEBUG can used. T o get less information, ERROR can be used. REMOTE_API_PORT \u2013 Specifies the port that Toec will listen on for push requests from Toems. The default value is 3913 . Push requests are not required for Theopenem to function, but it does provide the following capabilities from the computer actions menu, Current Users and Status. Previously this port was used for all push communications, but now with the move to web sockets, only the previously mentioned commands use it. Eventually it will be removed completely and solely rely on web sockets. LOCAL_API_PORT \u2013 Toec also listens on port 1415 by default for local requests only. The Toec-UI application for user logins cannot talk directly to Toems, it instead uses the Toec Service on port 1415 as an intermediary for this. USER_PORT_RANGE \u2013 The Toec-UI application loads at startup for each user that logs into the endpoint. Each Toec-UI will receive a corresponding port to communicate with that instance. The default range is 9000-10000 . REMOTE_ADDRESSES \u2013 When Toec is installed, it automatically creates a firewall exception for port 3913 to allow inbound requests. By default this exception is allowed for any ip address. If you want to limit the IP\u2019s that the exception is for, they can be specified in a comma separated list here. Such as 192.168.1.10,192.168.1.11. Be careful with this setting, if you input the wrong ip\u2019s, your Toems IP changes, or you add an additional Toems Server, you may not be able to communicate with your endpoints until you update the exception. SKIP_FIREWALL \u2013 When Toec is installed, it automatically creates a firewall exception for port 3913 to allow inbound requests. If this argument is set to true, the exception will not be created. RESET_DB \u2013 Used when reinstalling Toec. By default, the existing database is still used when Toec is reinstalled. Setting this value to true will clear the client database, treating the installation as if it were new. This would cause the endpoint to provision again. 2. Command Line Options \u00b6 After Toec is installed, it can also be run from the command line to change options or help in debugging. When using any of these commands, they must be run from an elevated cmd prompt and the service should be stopped. Toec.exe is located in c:\\program files\\toec. The commands are case sensitive . Toec.exe --console Starts Toec is console mode, displaying helpful debug info in the window. Toec.exe --version Displays the current Toec version Toec.exe --logLevel [INFO|DEBUG|ERROR] Updates the log level Toec.exe --resetFull This resets Toec back to a new installation state, deleting all settings, certificates, installationId, and history. This would cause the endpoint to provision again. If you are having trouble with the endpoint, try the partial before the full reset. A full reset may result in the loss of an existing relationship b/w the client and server. Toec.exe --resetPartial This performs a partial reset on Toec. History and installationId are not removed, everything else is reset. This will also cause the endpoint to provision again. Toec.exe --resetKey [SERVER_KEY] [CA_THUMBPRINT] Changes the server key and ca thumbprint for the endpoint. Toec.exe --comServers [COM_SERVERS] Updates the com servers for the endpoint.","title":"Toec Arguments"},{"location":"advanced/toec-arguments/#toec-advanced-options","text":"","title":"Toec Advanced Options"},{"location":"advanced/toec-arguments/#1-advanced-installation-arguments","text":"There are a few extra arguments that can be passed in during the installation of Toec, or embedded into the MST file. Reinstalling the MSI with any of these options will also overwrite the current value without changing anything that is not specified. LOG_LEVEL \u2013 The default logging level of Toec is INFO . To get more information, DEBUG can used. T o get less information, ERROR can be used. REMOTE_API_PORT \u2013 Specifies the port that Toec will listen on for push requests from Toems. The default value is 3913 . Push requests are not required for Theopenem to function, but it does provide the following capabilities from the computer actions menu, Current Users and Status. Previously this port was used for all push communications, but now with the move to web sockets, only the previously mentioned commands use it. Eventually it will be removed completely and solely rely on web sockets. LOCAL_API_PORT \u2013 Toec also listens on port 1415 by default for local requests only. The Toec-UI application for user logins cannot talk directly to Toems, it instead uses the Toec Service on port 1415 as an intermediary for this. USER_PORT_RANGE \u2013 The Toec-UI application loads at startup for each user that logs into the endpoint. Each Toec-UI will receive a corresponding port to communicate with that instance. The default range is 9000-10000 . REMOTE_ADDRESSES \u2013 When Toec is installed, it automatically creates a firewall exception for port 3913 to allow inbound requests. By default this exception is allowed for any ip address. If you want to limit the IP\u2019s that the exception is for, they can be specified in a comma separated list here. Such as 192.168.1.10,192.168.1.11. Be careful with this setting, if you input the wrong ip\u2019s, your Toems IP changes, or you add an additional Toems Server, you may not be able to communicate with your endpoints until you update the exception. SKIP_FIREWALL \u2013 When Toec is installed, it automatically creates a firewall exception for port 3913 to allow inbound requests. If this argument is set to true, the exception will not be created. RESET_DB \u2013 Used when reinstalling Toec. By default, the existing database is still used when Toec is reinstalled. Setting this value to true will clear the client database, treating the installation as if it were new. This would cause the endpoint to provision again.","title":"1. Advanced Installation Arguments"},{"location":"advanced/toec-arguments/#2-command-line-options","text":"After Toec is installed, it can also be run from the command line to change options or help in debugging. When using any of these commands, they must be run from an elevated cmd prompt and the service should be stopped. Toec.exe is located in c:\\program files\\toec. The commands are case sensitive . Toec.exe --console Starts Toec is console mode, displaying helpful debug info in the window. Toec.exe --version Displays the current Toec version Toec.exe --logLevel [INFO|DEBUG|ERROR] Updates the log level Toec.exe --resetFull This resets Toec back to a new installation state, deleting all settings, certificates, installationId, and history. This would cause the endpoint to provision again. If you are having trouble with the endpoint, try the partial before the full reset. A full reset may result in the loss of an existing relationship b/w the client and server. Toec.exe --resetPartial This performs a partial reset on Toec. History and installationId are not removed, everything else is reset. This will also cause the endpoint to provision again. Toec.exe --resetKey [SERVER_KEY] [CA_THUMBPRINT] Changes the server key and ca thumbprint for the endpoint. Toec.exe --comServers [COM_SERVERS] Updates the com servers for the endpoint.","title":"2. Command Line Options"},{"location":"getting-started/client-config-prereqs/","text":"Client Config Prereqs \u00b6 Before the Toec agent can be installed or deployed, it must be configured for your environment. A few tools need to be installed to help with this process. The following can be done on any computer, it does not need to be completed on a Theopenem server. 1. Download and Install 7-Zip \u00b6 Grab a copy from https://www.7-zip.org/ 2. Download Microsoft Installer 4.5 SDK \u00b6 Download from this link Do not install this after the download is done 3. Install Orca \u00b6 Right click on the msi45sdk.msi file, select 7-Zip,select Open archive Find orca.msi in the list of files and extract it to your desktop Install the orca.msi file by double clicking it This Concludes the Prerequisites. Check this off of your Installation checklist now.","title":"Client Config Prereqs"},{"location":"getting-started/client-config-prereqs/#client-config-prereqs","text":"Before the Toec agent can be installed or deployed, it must be configured for your environment. A few tools need to be installed to help with this process. The following can be done on any computer, it does not need to be completed on a Theopenem server.","title":"Client Config Prereqs"},{"location":"getting-started/client-config-prereqs/#1-download-and-install-7-zip","text":"Grab a copy from https://www.7-zip.org/","title":"1. Download and Install 7-Zip"},{"location":"getting-started/client-config-prereqs/#2-download-microsoft-installer-45-sdk","text":"Download from this link Do not install this after the download is done","title":"2. Download Microsoft Installer 4.5 SDK"},{"location":"getting-started/client-config-prereqs/#3-install-orca","text":"Right click on the msi45sdk.msi file, select 7-Zip,select Open archive Find orca.msi in the list of files and extract it to your desktop Install the orca.msi file by double clicking it This Concludes the Prerequisites. Check this off of your Installation checklist now.","title":"3. Install Orca"},{"location":"getting-started/configure/","text":"The following steps are all done after logging into any Toems-UI, these steps are only completed on a single server. The Toems-UI has built-in help for most of the pages. If you need additional clarification on something on one of the pages, click the Orange Info Button in the top right corner. 1. Change Admin Password \u00b6 Select Users from the Navigation Menu Select View on toemsadmin Update the User Password and Confirm Password fields Select Actions then Update User Click Logout from the Navigation Menu Log in with the new password 2. Set Provision Key \u00b6 Select Admin Settings from the Navigation menu Select Security from the Sub Navigation menu Click Actions, Click Generate Provision Key Click Actions, Click Update Security Settings 3. Set Organization Name \u00b6 Select Admin Settings from the Navigation menu Select Server from the Sub Navigation menu Fill in the name of your organization in the Organization field Click Actions, click Update Server Settings 4. Set The Default Com Server Cluster \u00b6 Select Admin Settings from the Navigation menu Select Client Com Servers from the Sub Navigation menu Select Add Com Server from the Sub Navigation menu Give the com server a name, every Toec-API application is considered a com server, the name should be something that identifies the server it\u2019s on, such as theopenem-01_com1 The URL is the URL for the Toec-API on this server, using it\u2019s FQDN, such as, http://theopenem-01.theopenem.com:8888/ If you have been filling out the Server Topology Worksheet this would be the Server FQDN of Application Server 1 plus the port of the Toec-API role. Click Actions, click Add Server If you are using more than 1 Toec-API, repeat the steps above to add all additional Com Servers Select Admin Settings from the Navigation menu Select Client Com Servers from the Sub Navigation menu Select Add Com Server Cluster Give the cluster a name Enable the Default Cluster Option Check the box next to each Com Server you Added leaving the Role set to Active Click Actions, click Add Cluster 5. Setup SMTP Server \u00b6 Select E-mail from the Sub Navigation menu Enable the Mail Enabled option Fill out the form with you SMTP server settings Click Actions, click Update E-mail Settings 6. LDAP Setup \u00b6 Select Admin Settings from the Navigation menu Select Security from Sub Navigation menu Enable LDAP Integration Click Actions, click Update Security Settings Select Admin Settings from the Navigation menu Select LDAP from the Sub Navigation menu Fill in the form with your LDAP specifications Click Actions, click Update LDAP settings Click Actions, Test AD Bind, to verify settings are correct 7. Set the Storage Location \u00b6 If you are using a single Theopenem server with Toec-API and Toems-API installed on the same server: Select Admin Settings from the Navigation Menu Select Storage Location from the Sub Navigation Menu Set the Storage Type to Local Enter the local storage path that you created back in the Create Storage Directory Docs If you have been filling out the Server Topology Worksheet this would be the Local Storage Path of Application Server 1. Click Actions, click Update Storage Settings If you are using multiple Theopenem servers with Toec-API and Toems-API installed on more than 1 server. You must first setup a file share on a remote server. This must be an SMB share and can be on any device that supports SMB. A user must be setup on that share with Read / Write privileges. This share cannot be on any Theopenem server. Select Admin Settings from the Navigation Menu Select Storage Location from the Sub Navigation Menu Set the Storage Type to SMB Enter the Storage Path in UNC format, such as, \\\\myfileserver\\theopenem_share Enter the Username for the user that is used to connect to the share Enter the Password for the user that is used to connect to the share Enter the Domain for the user that is used to connect to the share, if applicable Click Actions, click Update Storage Settings Continue filling in the Server Topology Worksheet, fill in all file share information now 8. Generate Certificates \u00b6 Select Admin Settings from the Navigation Menu Select Certificates from the Sub Navigation Menu Click Actions, click Generate Certificates This concludes Configure Theopenem. Check this off of your Installation checklist now.","title":"Configure Theopenem"},{"location":"getting-started/configure/#1-change-admin-password","text":"Select Users from the Navigation Menu Select View on toemsadmin Update the User Password and Confirm Password fields Select Actions then Update User Click Logout from the Navigation Menu Log in with the new password","title":"1. Change Admin Password"},{"location":"getting-started/configure/#2-set-provision-key","text":"Select Admin Settings from the Navigation menu Select Security from the Sub Navigation menu Click Actions, Click Generate Provision Key Click Actions, Click Update Security Settings","title":"2. Set Provision Key"},{"location":"getting-started/configure/#3-set-organization-name","text":"Select Admin Settings from the Navigation menu Select Server from the Sub Navigation menu Fill in the name of your organization in the Organization field Click Actions, click Update Server Settings","title":"3. Set Organization Name"},{"location":"getting-started/configure/#4-set-the-default-com-server-cluster","text":"Select Admin Settings from the Navigation menu Select Client Com Servers from the Sub Navigation menu Select Add Com Server from the Sub Navigation menu Give the com server a name, every Toec-API application is considered a com server, the name should be something that identifies the server it\u2019s on, such as theopenem-01_com1 The URL is the URL for the Toec-API on this server, using it\u2019s FQDN, such as, http://theopenem-01.theopenem.com:8888/ If you have been filling out the Server Topology Worksheet this would be the Server FQDN of Application Server 1 plus the port of the Toec-API role. Click Actions, click Add Server If you are using more than 1 Toec-API, repeat the steps above to add all additional Com Servers Select Admin Settings from the Navigation menu Select Client Com Servers from the Sub Navigation menu Select Add Com Server Cluster Give the cluster a name Enable the Default Cluster Option Check the box next to each Com Server you Added leaving the Role set to Active Click Actions, click Add Cluster","title":"4. Set The Default Com Server Cluster"},{"location":"getting-started/configure/#5-setup-smtp-server","text":"Select E-mail from the Sub Navigation menu Enable the Mail Enabled option Fill out the form with you SMTP server settings Click Actions, click Update E-mail Settings","title":"5. Setup SMTP Server"},{"location":"getting-started/configure/#6-ldap-setup","text":"Select Admin Settings from the Navigation menu Select Security from Sub Navigation menu Enable LDAP Integration Click Actions, click Update Security Settings Select Admin Settings from the Navigation menu Select LDAP from the Sub Navigation menu Fill in the form with your LDAP specifications Click Actions, click Update LDAP settings Click Actions, Test AD Bind, to verify settings are correct","title":"6. LDAP Setup"},{"location":"getting-started/configure/#7-set-the-storage-location","text":"If you are using a single Theopenem server with Toec-API and Toems-API installed on the same server: Select Admin Settings from the Navigation Menu Select Storage Location from the Sub Navigation Menu Set the Storage Type to Local Enter the local storage path that you created back in the Create Storage Directory Docs If you have been filling out the Server Topology Worksheet this would be the Local Storage Path of Application Server 1. Click Actions, click Update Storage Settings If you are using multiple Theopenem servers with Toec-API and Toems-API installed on more than 1 server. You must first setup a file share on a remote server. This must be an SMB share and can be on any device that supports SMB. A user must be setup on that share with Read / Write privileges. This share cannot be on any Theopenem server. Select Admin Settings from the Navigation Menu Select Storage Location from the Sub Navigation Menu Set the Storage Type to SMB Enter the Storage Path in UNC format, such as, \\\\myfileserver\\theopenem_share Enter the Username for the user that is used to connect to the share Enter the Password for the user that is used to connect to the share Enter the Domain for the user that is used to connect to the share, if applicable Click Actions, click Update Storage Settings Continue filling in the Server Topology Worksheet, fill in all file share information now","title":"7. Set the Storage Location"},{"location":"getting-started/configure/#8-generate-certificates","text":"Select Admin Settings from the Navigation Menu Select Certificates from the Sub Navigation Menu Click Actions, click Generate Certificates This concludes Configure Theopenem. Check this off of your Installation checklist now.","title":"8. Generate Certificates"},{"location":"getting-started/database-firewall/","text":"This section is only completed a single time on your database server. If your database was installed on a remote server in relation to your Theopenem server, you will need to open the firewall on that database server to allow connections from all Toems-API and Toec-API servers. Follow the Creating Firewall Exceptions Guide from earlier, modifying the ports as necessary. If using MS SQL Server you need to allow port 1433 If using MariaDB you need to allow port 3306 For enhanced security you should only open the firewall for your Theopenem Server IP addresses, not any IP address Check off Create Database Firewall Exceptions from your installation checklist now.","title":"Database Firewall Exception"},{"location":"getting-started/database-mariadb/","text":"MariaDB / MySQL Database Setup \u00b6 This section is only for user\u2019s that have selected MariaDB / MySQL as their RDBMS. If you have already setup MS SQL Server, continue on to the database firewall section . Some users may not be familiar with MariaDB, this guide will cover installation as well as setup. If you will be using an existing MariaDB / MySQL installation, you can skip to section 5 . 1. Download MariaDB \u00b6 Download MariaDB 10.3.12-GA here or visit https://mariadb.com/downloads 2. Run the MariaDB MSI, continue through prompts accepting all default values until you reach the root password page \u00b6 Provide a password for the root account, this account will have full access to the database server, make it a strong one, Click Next Continue through the remaining prompts accepting all default values until installation is finished Continue filling in the Server Topology Worksheet under Database Server. Fill in the Database Root/SA Password now. 3. Open a cmd prompt as administrator, change to MariaDB directory with the following command, this path might be different on different MariaDB versions \u00b6 cd \"c:\\Program Files\\MariaDB 10.3\\bin\" 4. Still in cmd prompt, load the sql shell. Enter the root password from section 2 when prompted \u00b6 mysql.exe -u root -p 5. Enter the following SQL commands, and replace your-password-here with a password of your choosing \u00b6 create database theopenem; create user 'theopenem_db_user'@'%' identified by 'your-password-here'; grant all privileges on theopenem.* to 'theopenem_db_user'@'%'; flush privileges; quit Continue filling in the Server Topology Worksheet under Database Server. Fill in the Database Name, Database Username, and Database Password. 6. Locate the mysql.sql file from the Theopenem-1.1.0 package that was downloaded in the Install Toems Web Applications Section \u00b6 Copy the mysql.sql file to c:\\ Back in cmd prompt run the following to create the database tables, enter the root password when prompted: mysql.exe --user=root --password --database=theopenem --execute=\"source c:\\mysql.sql\" -v This concludes the Setup Database if you have selected MariaDB / MySQL Server. Check this off of your Installation checklist now.","title":"MariaDB / MySQL"},{"location":"getting-started/database-mariadb/#mariadb-mysql-database-setup","text":"This section is only for user\u2019s that have selected MariaDB / MySQL as their RDBMS. If you have already setup MS SQL Server, continue on to the database firewall section . Some users may not be familiar with MariaDB, this guide will cover installation as well as setup. If you will be using an existing MariaDB / MySQL installation, you can skip to section 5 .","title":"MariaDB / MySQL Database Setup"},{"location":"getting-started/database-mariadb/#1-download-mariadb","text":"Download MariaDB 10.3.12-GA here or visit https://mariadb.com/downloads","title":"1.  Download MariaDB"},{"location":"getting-started/database-mariadb/#2-run-the-mariadb-msi-continue-through-prompts-accepting-all-default-values-until-you-reach-the-root-password-page","text":"Provide a password for the root account, this account will have full access to the database server, make it a strong one, Click Next Continue through the remaining prompts accepting all default values until installation is finished Continue filling in the Server Topology Worksheet under Database Server. Fill in the Database Root/SA Password now.","title":"2.  Run the MariaDB MSI, continue through prompts accepting all default values until you reach the root password page"},{"location":"getting-started/database-mariadb/#3-open-a-cmd-prompt-as-administrator-change-to-mariadb-directory-with-the-following-command-this-path-might-be-different-on-different-mariadb-versions","text":"cd \"c:\\Program Files\\MariaDB 10.3\\bin\"","title":"3.  Open a cmd prompt as administrator, change to MariaDB directory with the following command, this path might be different on different MariaDB versions"},{"location":"getting-started/database-mariadb/#4-still-in-cmd-prompt-load-the-sql-shell-enter-the-root-password-from-section-2-when-prompted","text":"mysql.exe -u root -p","title":"4.  Still in cmd prompt, load the sql shell.  Enter the root password from section 2 when prompted"},{"location":"getting-started/database-mariadb/#5-enter-the-following-sql-commands-and-replace-your-password-here-with-a-password-of-your-choosing","text":"create database theopenem; create user 'theopenem_db_user'@'%' identified by 'your-password-here'; grant all privileges on theopenem.* to 'theopenem_db_user'@'%'; flush privileges; quit Continue filling in the Server Topology Worksheet under Database Server. Fill in the Database Name, Database Username, and Database Password.","title":"5.  Enter the following SQL commands, and replace your-password-here with a password of your choosing"},{"location":"getting-started/database-mariadb/#6-locate-the-mysqlsql-file-from-the-theopenem-110-package-that-was-downloaded-in-the-install-toems-web-applications-section","text":"Copy the mysql.sql file to c:\\ Back in cmd prompt run the following to create the database tables, enter the root password when prompted: mysql.exe --user=root --password --database=theopenem --execute=\"source c:\\mysql.sql\" -v This concludes the Setup Database if you have selected MariaDB / MySQL Server. Check this off of your Installation checklist now.","title":"6.  Locate the mysql.sql file from the Theopenem-1.1.0 package that was downloaded in the Install Toems Web Applications Section"},{"location":"getting-started/database-overview/","text":"Database Overview \u00b6 This section is only completed a single time, even if you are installing multiple Theopenem servers. All Toems-API and Toec-API applications share the same database. Theopenem supports Microsoft SQL Server, MariaDB, and MySQL. There is no functional difference in how they are used with Theopenem. Choose the RDBMS you are most comfortable with. Remember, SQL Server Express is not supported The following guide serves as a baseline to get the database running on either MariaDB or Microsoft SQL Server. If you already have an existing database cluster, it is recommended to use it. The guides may need adapted to fit your environment. If you are installing a new database server, it's recommended to install it somewhere other than your Theopenem server. If required, it is acceptable to install the database on Theopenem but should really only be done as a last resort and if only a single Theopenem server is deployed Continue filling in the Server Topology Worksheet under Database Server. Fill in the Server FQDN, RDBMS, and RDBMS Version Continue With MariaDB Continue With SQL Server","title":"Overview"},{"location":"getting-started/database-overview/#database-overview","text":"This section is only completed a single time, even if you are installing multiple Theopenem servers. All Toems-API and Toec-API applications share the same database. Theopenem supports Microsoft SQL Server, MariaDB, and MySQL. There is no functional difference in how they are used with Theopenem. Choose the RDBMS you are most comfortable with. Remember, SQL Server Express is not supported The following guide serves as a baseline to get the database running on either MariaDB or Microsoft SQL Server. If you already have an existing database cluster, it is recommended to use it. The guides may need adapted to fit your environment. If you are installing a new database server, it's recommended to install it somewhere other than your Theopenem server. If required, it is acceptable to install the database on Theopenem but should really only be done as a last resort and if only a single Theopenem server is deployed Continue filling in the Server Topology Worksheet under Database Server. Fill in the Server FQDN, RDBMS, and RDBMS Version Continue With MariaDB Continue With SQL Server","title":"Database Overview"},{"location":"getting-started/database-sqlserver/","text":"Microsoft SQL Server Database Setup \u00b6 This guide will walk you through setting up a new database for Theopenem, creating the necessary tables, and adding a user on Microsoft SQL Server. This guide does not provide details on how to install Microsoft SQL Server. If you will instead be using MariaDB / MySQL, continue on to this guide . 1. Open SQL Server Management Studio and connect to the SQL Server that will house the Theopenem database \u00b6 2. Right click on Databases and select New Database \u00b6 3. Give the Database a name, such as theopenem, modify the Initial Size of the database and log file to 1000 MB, modify the Autogrowth setting to 500MB or more on both, click OK \u00b6 4. Select File, Open, File, select the sqlserver.sql file that was in Theopenem-1.1.0 Package you downloaded earlier. \u00b6 5. The script should be displayed in the query window. Verify the Available Databases drop down displays theopenem and select Execute \u00b6 6. On left side menu, expand Security, right click Logins, select New Login \u00b6 7. Select SQL Server authentication, enter a login name, such as theopenem_db_login, enter a password, uncheck the following boxes: \u00b6 Uncheck Enforce Password Policy Enforce Password Expiration User must change password at next login 8. Select the User Mapping Page, check the box for theopenem database on the top menu, check the box for db_owner on the bottom menu, click OK \u00b6 Continue filling in the Server Topology Worksheet under Database Server. Fill in the Database Name, Database Username, and Database Password. This concludes the Setup Database if you have selected Microsoft SQL Server. Check this off of your Installation checklist now.","title":"Microsoft SQL Server"},{"location":"getting-started/database-sqlserver/#microsoft-sql-server-database-setup","text":"This guide will walk you through setting up a new database for Theopenem, creating the necessary tables, and adding a user on Microsoft SQL Server. This guide does not provide details on how to install Microsoft SQL Server. If you will instead be using MariaDB / MySQL, continue on to this guide .","title":"Microsoft SQL Server Database Setup"},{"location":"getting-started/database-sqlserver/#1-open-sql-server-management-studio-and-connect-to-the-sql-server-that-will-house-the-theopenem-database","text":"","title":"1. Open SQL Server Management Studio and connect to the SQL Server that will house the Theopenem database"},{"location":"getting-started/database-sqlserver/#2-right-click-on-databases-and-select-new-database","text":"","title":"2. Right click on Databases and select New Database"},{"location":"getting-started/database-sqlserver/#3-give-the-database-a-name-such-as-theopenem-modify-the-initial-size-of-the-database-and-log-file-to-1000-mb-modify-the-autogrowth-setting-to-500mb-or-more-on-both-click-ok","text":"","title":"3. Give the Database a name, such as theopenem, modify the Initial Size of the database and log file to 1000 MB, modify the Autogrowth setting to 500MB or more on both, click OK"},{"location":"getting-started/database-sqlserver/#4-select-file-open-file-select-the-sqlserversql-file-that-was-in-theopenem-110-package-you-downloaded-earlier","text":"","title":"4. Select File, Open, File, select the sqlserver.sql file that was in Theopenem-1.1.0 Package you downloaded earlier."},{"location":"getting-started/database-sqlserver/#5-the-script-should-be-displayed-in-the-query-window-verify-the-available-databases-drop-down-displays-theopenem-and-select-execute","text":"","title":"5. The script should be displayed in the query window.  Verify the Available Databases drop down displays theopenem and select Execute"},{"location":"getting-started/database-sqlserver/#6-on-left-side-menu-expand-security-right-click-logins-select-new-login","text":"","title":"6. On left side menu, expand Security, right click Logins, select New Login"},{"location":"getting-started/database-sqlserver/#7-select-sql-server-authentication-enter-a-login-name-such-as-theopenem_db_login-enter-a-password-uncheck-the-following-boxes","text":"Uncheck Enforce Password Policy Enforce Password Expiration User must change password at next login","title":"7. Select SQL Server authentication, enter a login name, such as theopenem_db_login, enter a password, uncheck the following boxes:"},{"location":"getting-started/database-sqlserver/#8-select-the-user-mapping-page-check-the-box-for-theopenem-database-on-the-top-menu-check-the-box-for-db_owner-on-the-bottom-menu-click-ok","text":"Continue filling in the Server Topology Worksheet under Database Server. Fill in the Database Name, Database Username, and Database Password. This concludes the Setup Database if you have selected Microsoft SQL Server. Check this off of your Installation checklist now.","title":"8. Select the User Mapping Page, check the box for theopenem database on the top menu, check the box for db_owner on the bottom menu, click OK"},{"location":"getting-started/deploy-toec/","text":"Deploy Toec Via Group Policy \u00b6 1. Begin by copying your Toec x86, Toec x64, and Toec-Transform files to a share that everyone has access to. \u00b6 This example uses the sysvol location on the domain controller. 2. Open Group Policy Management for your Domain \u00b6 3. Right click on Group Policy Objects for your domain and select New \u00b6 4. Give the new GPO a name such as Deploy Toec, click OK \u00b6 5. Right click on the newly create GPO and select Edit \u00b6 6. Expand Computer Configuration, Expand Policies, Expand Software Settings, Right Click Software Installation, select New Package \u00b6 7. Navigate To the UNC Path of the files and select the Toec-1.0.0-x64 file. Do not select the 32 bit file. \u00b6 8. Select Advanced on the Select deployment method dialog. \u00b6 9. Select the Modifications Tab, click Add \u00b6 10. Select the Toec-Transform.mst file from the same network location as the msi files, then click OK. \u00b6 11. You should be back at the Group Policy Management Editor, again right click on Software Installation, Select New then Package. \u00b6 12. This time select the x86 version of the Toec MSI from the same network location. \u00b6 13. Again Click advanced on the Select deployment method dialogs, the click OK. \u00b6 14. Select the Deployment Tab, then Click Advanced \u00b6 15. Uncheck the box for Make this 32-bit X86 application available to Win64 machines, click OK \u00b6 16. Select the Upgrades Tab, Click Upgrade Toec 1.1.0.0 x64, Click Remove \u00b6 17. Select the Modifications Tab, click Add \u00b6 18. Select the same Toec-Transform.mst file you used for the x64 MSI from the same network location as the msi files, then click OK. \u00b6 19. Close the Group Policy Management Editor \u00b6 20. Link the GPO to the OUs you want to deploy to. It should go without saying, to start small and expand. \u00b6 This Concludes Install Toec Via Group Policy. Check this off of your Installation checklist now.","title":"Install Client Via Group Policy"},{"location":"getting-started/deploy-toec/#deploy-toec-via-group-policy","text":"","title":"Deploy Toec Via Group Policy"},{"location":"getting-started/deploy-toec/#1-begin-by-copying-your-toec-x86-toec-x64-and-toec-transform-files-to-a-share-that-everyone-has-access-to","text":"This example uses the sysvol location on the domain controller.","title":"1. Begin by copying your Toec x86, Toec x64, and Toec-Transform files to a share that everyone has access to."},{"location":"getting-started/deploy-toec/#2-open-group-policy-management-for-your-domain","text":"","title":"2. Open Group Policy Management for your Domain"},{"location":"getting-started/deploy-toec/#3-right-click-on-group-policy-objects-for-your-domain-and-select-new","text":"","title":"3. Right click on Group Policy Objects for your domain and select New"},{"location":"getting-started/deploy-toec/#4-give-the-new-gpo-a-name-such-as-deploy-toec-click-ok","text":"","title":"4. Give the new GPO a name such as Deploy Toec, click OK"},{"location":"getting-started/deploy-toec/#5-right-click-on-the-newly-create-gpo-and-select-edit","text":"","title":"5. Right click on the newly create GPO and select Edit"},{"location":"getting-started/deploy-toec/#6-expand-computer-configuration-expand-policies-expand-software-settings-right-click-software-installation-select-new-package","text":"","title":"6. Expand Computer Configuration, Expand Policies, Expand Software Settings, Right Click Software Installation, select New Package"},{"location":"getting-started/deploy-toec/#7-navigate-to-the-unc-path-of-the-files-and-select-the-toec-100-x64-file-do-not-select-the-32-bit-file","text":"","title":"7. Navigate To the UNC Path of the files and select the Toec-1.0.0-x64 file.  Do not select the 32 bit file."},{"location":"getting-started/deploy-toec/#8-select-advanced-on-the-select-deployment-method-dialog","text":"","title":"8. Select Advanced on the Select deployment method dialog."},{"location":"getting-started/deploy-toec/#9-select-the-modifications-tab-click-add","text":"","title":"9. Select the Modifications Tab, click Add"},{"location":"getting-started/deploy-toec/#10-select-the-toec-transformmst-file-from-the-same-network-location-as-the-msi-files-then-click-ok","text":"","title":"10. Select the Toec-Transform.mst file from the same network location as the msi files, then click OK."},{"location":"getting-started/deploy-toec/#11-you-should-be-back-at-the-group-policy-management-editor-again-right-click-on-software-installation-select-new-then-package","text":"","title":"11. You should be back at the Group Policy Management Editor, again right click on Software Installation, Select New then Package."},{"location":"getting-started/deploy-toec/#12-this-time-select-the-x86-version-of-the-toec-msi-from-the-same-network-location","text":"","title":"12. This time select the x86 version of the Toec MSI from the same network location."},{"location":"getting-started/deploy-toec/#13-again-click-advanced-on-the-select-deployment-method-dialogs-the-click-ok","text":"","title":"13. Again Click advanced on the Select deployment method dialogs, the click OK."},{"location":"getting-started/deploy-toec/#14-select-the-deployment-tab-then-click-advanced","text":"","title":"14. Select the Deployment Tab, then Click Advanced"},{"location":"getting-started/deploy-toec/#15-uncheck-the-box-for-make-this-32-bit-x86-application-available-to-win64-machines-click-ok","text":"","title":"15. Uncheck the box for Make this 32-bit X86 application available to Win64 machines, click OK"},{"location":"getting-started/deploy-toec/#16-select-the-upgrades-tab-click-upgrade-toec-1100-x64-click-remove","text":"","title":"16. Select the Upgrades Tab, Click Upgrade Toec 1.1.0.0 x64, Click Remove"},{"location":"getting-started/deploy-toec/#17-select-the-modifications-tab-click-add","text":"","title":"17. Select the Modifications Tab, click Add"},{"location":"getting-started/deploy-toec/#18-select-the-same-toec-transformmst-file-you-used-for-the-x64-msi-from-the-same-network-location-as-the-msi-files-then-click-ok","text":"","title":"18. Select the same Toec-Transform.mst file you used for the x64 MSI from the same network location as the msi files, then click OK."},{"location":"getting-started/deploy-toec/#19-close-the-group-policy-management-editor","text":"","title":"19. Close the Group Policy Management Editor"},{"location":"getting-started/deploy-toec/#20-link-the-gpo-to-the-ous-you-want-to-deploy-to-it-should-go-without-saying-to-start-small-and-expand","text":"This Concludes Install Toec Via Group Policy. Check this off of your Installation checklist now.","title":"20. Link the GPO to the OUs you want to deploy to. It should go without saying, to start small and expand."},{"location":"getting-started/endpoint-provisioning-setup/","text":"Endpoint Provisioning Setup \u00b6 Provisioning is the process of allowing an endpoint to be managed by Theopenem. This includes the exchange of certificates and encryption keys b/w the client and server. This process is automated when the Toec Agent is installed, but there are some settings on the Server that should be addressed to ensure a smooth provisioning process. 1. Active Directory Sync \u00b6 Syncing with Active Directory is highly recommended but not required. It is a read only one way sync from AD to Theopenem. It will sync in Computer names and Organizational Unit names, servers are skipped. The benefit of syncing in the Computers is to pre-provision them. A pre-provisioned computer is added to Theopenem but cannot yet be managed until provisioning from the client completes. When a computer is pre-provisioned, it can be assigned to groups with policies already defined, this way when an endpoint completes the provisioning process, it will automatically start running the necessary policies. Syncing from AD also allows you to assign policies to your existing OU's, as another method of targeting groups of computers. If you skipped over the LDAP setup during the server installation it's recommended to configure it now. Login to the Toems-UI, select Admin Settings->Security Enable the LDAP Integration if not already enabled Click Actions, Update Security Settings Select Admin Settings->LDAP Fill out the LDAP form, use the built-in help menu in the top right for more info on the fields Click Actions, Update LDAP Settings Click Actions, Test AD Bind, to verify the connection was successful Select Admin Settings->Task Scheduler Find the LDAP Sync row and click Run Now. There is no visual confirmation when using the Run Now button. By default this task will run every night at 1:00AM. Give the process 5-10 minutes to run, you can navigate away from the page. Select Computers->Search All. It should show all of the synchronized computers with a Provision Status of PreProvisioned. Select Groups->Active Directory OU Browser. You should see your Domain Directory Tree. This Concludes Active Directory Sync. Check this off of your Installation checklist now. 2. Provisioning Security \u00b6 There are a few security measures in place to regulate endpoint provisioning. They are currently all on by default, but you may disable them. The following options are available in Admin Settings->Security. Preprovision Required \u2013 When this option is enabled, a computer will not be allowed to provision unless it has already been pre-provisioned. If you are syncing from Active Directory, computers have already met this requirement when they were synced. If you are not syncing from AD, pre-provisions may be manually added from Computers->Create Pre-Provision. New Computer Provision Approval Required \u2013 When this option is enabled, a Theopenem user must manually approve computers before they will be allowed to provision. This setting does not apply to pre-provisioned computers since they have already been approved. Provision approval requests will be displayed in Computers->Approval Requests when a new computer tries to provision for the first time. This is where the user can approve or deny the request. A report is emailed twice per day when endpoints are waiting for approval. Preprovision Approval Required \u2013 This setting is a combination of the previous two settings. When this is enabled, a user must manually approve and endpoint\u2019s provision request even if it has already been pre-provisioned. The request are still approved from Computers->Approval Requests, and a report is still sent twice per day.","title":"Endpoint Provisioning Setup"},{"location":"getting-started/endpoint-provisioning-setup/#endpoint-provisioning-setup","text":"Provisioning is the process of allowing an endpoint to be managed by Theopenem. This includes the exchange of certificates and encryption keys b/w the client and server. This process is automated when the Toec Agent is installed, but there are some settings on the Server that should be addressed to ensure a smooth provisioning process.","title":"Endpoint Provisioning Setup"},{"location":"getting-started/endpoint-provisioning-setup/#1-active-directory-sync","text":"Syncing with Active Directory is highly recommended but not required. It is a read only one way sync from AD to Theopenem. It will sync in Computer names and Organizational Unit names, servers are skipped. The benefit of syncing in the Computers is to pre-provision them. A pre-provisioned computer is added to Theopenem but cannot yet be managed until provisioning from the client completes. When a computer is pre-provisioned, it can be assigned to groups with policies already defined, this way when an endpoint completes the provisioning process, it will automatically start running the necessary policies. Syncing from AD also allows you to assign policies to your existing OU's, as another method of targeting groups of computers. If you skipped over the LDAP setup during the server installation it's recommended to configure it now. Login to the Toems-UI, select Admin Settings->Security Enable the LDAP Integration if not already enabled Click Actions, Update Security Settings Select Admin Settings->LDAP Fill out the LDAP form, use the built-in help menu in the top right for more info on the fields Click Actions, Update LDAP Settings Click Actions, Test AD Bind, to verify the connection was successful Select Admin Settings->Task Scheduler Find the LDAP Sync row and click Run Now. There is no visual confirmation when using the Run Now button. By default this task will run every night at 1:00AM. Give the process 5-10 minutes to run, you can navigate away from the page. Select Computers->Search All. It should show all of the synchronized computers with a Provision Status of PreProvisioned. Select Groups->Active Directory OU Browser. You should see your Domain Directory Tree. This Concludes Active Directory Sync. Check this off of your Installation checklist now.","title":"1. Active Directory Sync"},{"location":"getting-started/endpoint-provisioning-setup/#2-provisioning-security","text":"There are a few security measures in place to regulate endpoint provisioning. They are currently all on by default, but you may disable them. The following options are available in Admin Settings->Security. Preprovision Required \u2013 When this option is enabled, a computer will not be allowed to provision unless it has already been pre-provisioned. If you are syncing from Active Directory, computers have already met this requirement when they were synced. If you are not syncing from AD, pre-provisions may be manually added from Computers->Create Pre-Provision. New Computer Provision Approval Required \u2013 When this option is enabled, a Theopenem user must manually approve computers before they will be allowed to provision. This setting does not apply to pre-provisioned computers since they have already been approved. Provision approval requests will be displayed in Computers->Approval Requests when a new computer tries to provision for the first time. This is where the user can approve or deny the request. A report is emailed twice per day when endpoints are waiting for approval. Preprovision Approval Required \u2013 This setting is a combination of the previous two settings. When this is enabled, a user must manually approve and endpoint\u2019s provision request even if it has already been pre-provisioned. The request are still approved from Computers->Approval Requests, and a report is still sent twice per day.","title":"2. Provisioning Security"},{"location":"getting-started/finally/","text":"Theopenem Server Installation Is Now Complete \u00b6 If you are going to setup an additional Application Server or DMZ Toec API, you should repeat the following sections for each additional server. Install IIS Install Toems Web Applications Create Firewall Exceptions Update Web.config Test the Web Applications Create the Storage Directory Configure Theopenem - Set The Default Com Server Cluster Configure Theopenem - Set The Storage Location Install Certificates Web.config Revisited Continue to fill in your Topology Worksheet for Application Server 2 and DMZ Toec-API, remember to change any references from the above guide referenced as Application Server 1 to Application Server 2 or DMZ Toec-API. The next couple of topics will deal with getting the endpoint agent installed, starting with Endpoint Provisioning Setup","title":"Finally"},{"location":"getting-started/finally/#theopenem-server-installation-is-now-complete","text":"If you are going to setup an additional Application Server or DMZ Toec API, you should repeat the following sections for each additional server. Install IIS Install Toems Web Applications Create Firewall Exceptions Update Web.config Test the Web Applications Create the Storage Directory Configure Theopenem - Set The Default Com Server Cluster Configure Theopenem - Set The Storage Location Install Certificates Web.config Revisited Continue to fill in your Topology Worksheet for Application Server 2 and DMZ Toec-API, remember to change any references from the above guide referenced as Application Server 1 to Application Server 2 or DMZ Toec-API. The next couple of topics will deal with getting the endpoint agent installed, starting with Endpoint Provisioning Setup","title":"Theopenem Server Installation Is Now Complete"},{"location":"getting-started/firewall-exceptions/","text":"Firewall Exceptions \u00b6 When the IIS Server Role was installed earlier, it automatically created an exception for port 80 and 443. Two more exceptions must be added for the additional Web Applications, port 8080 and port 8888. While we are here we will also setup ports 8443 and 4444 should you decide to enable SSL at a later time. 1. Go to start or run and enter wf.msc \u00b6 2. Select Inbound Rules , Right click on Inbound Rules and select New Rule \u00b6 3. For the Rule Type , select Port \u00b6 4. On the protocols and ports page, select TCP and ports 8080,8443 \u00b6 5. On the Action page , select Allow the connection . \u00b6 6. On the Name page, enter Toems-API , click Finish \u00b6 7. Follow Steps 2-6 again to create an exception for Toec-API \u00b6 This time use ports 8888,4444 and set the name to Toec-API This concludes the Create Firewall Exceptions. Check this off of your Installation checklist now.","title":"Create Firewall Exceptions"},{"location":"getting-started/firewall-exceptions/#firewall-exceptions","text":"When the IIS Server Role was installed earlier, it automatically created an exception for port 80 and 443. Two more exceptions must be added for the additional Web Applications, port 8080 and port 8888. While we are here we will also setup ports 8443 and 4444 should you decide to enable SSL at a later time.","title":"Firewall Exceptions"},{"location":"getting-started/firewall-exceptions/#1-go-to-start-or-run-and-enter-wfmsc","text":"","title":"1. Go to start or run and enter wf.msc"},{"location":"getting-started/firewall-exceptions/#2-select-inbound-rules-right-click-on-inbound-rules-and-select-new-rule","text":"","title":"2. Select Inbound Rules, Right click on Inbound Rules and select New Rule"},{"location":"getting-started/firewall-exceptions/#3-for-the-rule-type-select-port","text":"","title":"3. For the Rule Type, select Port"},{"location":"getting-started/firewall-exceptions/#4-on-the-protocols-and-ports-page-select-tcp-and-ports-80808443","text":"","title":"4. On the protocols and ports page, select TCP and ports 8080,8443"},{"location":"getting-started/firewall-exceptions/#5-on-the-action-page-select-allow-the-connection","text":"","title":"5. On the Action page, select Allow the connection."},{"location":"getting-started/firewall-exceptions/#6-on-the-name-page-enter-toems-api-click-finish","text":"","title":"6. On the Name page, enter Toems-API, click Finish"},{"location":"getting-started/firewall-exceptions/#7-follow-steps-2-6-again-to-create-an-exception-for-toec-api","text":"This time use ports 8888,4444 and set the name to Toec-API This concludes the Create Firewall Exceptions. Check this off of your Installation checklist now.","title":"7. Follow Steps 2-6 again to create an exception for Toec-API"},{"location":"getting-started/install-certificates/","text":"Install Certificates \u00b6 The certificates are used for identification, encryption, and signing with your endpoints. The CA and intermediate need to be imported into the Windows Certificate Store on each Theopenem server. 1. Export Certificates from Toems-UI \u00b6 Login to the Toems-UI from the server itself, do not do this remotely, these certificates are being installed on the Application Server itself, not an end user\u2019s PC. Select Admin Settings from the Navigation Menu Select Certificates from the Sub Navigation Menu Find the certificate with the Type Authority and click Export Save the File when prompted Locate the file that was just downloaded and rename it to toems-ca Find the certificate with the Type Intermediate and click Export Save the File when prompted Locate the file that was just downloaded and rename it to toems-intermediate You should now have the 2 certificates saved on the local server 2. Install Certificates in the Local Certificate Store \u00b6 Double click on the toems-ca file, select Install Certificate Select Local Machine, click Next Select Place all certificates in the following store, click Browse, select Trusted Root Certificate Authorities, click OK, then Next, then Finish Perform the previous 3 steps on the toems-intermediate certificate, this time when selecting the location to store the cert, select Intermediate Certification Authorities Remember to copy the 2 certificates to any other servers running the Toec-API and complete section 2 on each other server This concludes Install Certificates. Check this off of your Installation checklist now.","title":"Install Certificates"},{"location":"getting-started/install-certificates/#install-certificates","text":"The certificates are used for identification, encryption, and signing with your endpoints. The CA and intermediate need to be imported into the Windows Certificate Store on each Theopenem server.","title":"Install Certificates"},{"location":"getting-started/install-certificates/#1-export-certificates-from-toems-ui","text":"Login to the Toems-UI from the server itself, do not do this remotely, these certificates are being installed on the Application Server itself, not an end user\u2019s PC. Select Admin Settings from the Navigation Menu Select Certificates from the Sub Navigation Menu Find the certificate with the Type Authority and click Export Save the File when prompted Locate the file that was just downloaded and rename it to toems-ca Find the certificate with the Type Intermediate and click Export Save the File when prompted Locate the file that was just downloaded and rename it to toems-intermediate You should now have the 2 certificates saved on the local server","title":"1. Export Certificates from Toems-UI"},{"location":"getting-started/install-certificates/#2-install-certificates-in-the-local-certificate-store","text":"Double click on the toems-ca file, select Install Certificate Select Local Machine, click Next Select Place all certificates in the following store, click Browse, select Trusted Root Certificate Authorities, click OK, then Next, then Finish Perform the previous 3 steps on the toems-intermediate certificate, this time when selecting the location to store the cert, select Intermediate Certification Authorities Remember to copy the 2 certificates to any other servers running the Toec-API and complete section 2 on each other server This concludes Install Certificates. Check this off of your Installation checklist now.","title":"2. Install Certificates in the Local Certificate Store"},{"location":"getting-started/install-iis/","text":"Install IIS \u00b6 Start filling in the the Server Topology Worksheet under Application Server 1 now. Provide the FQDN and server version. 1. Begin by opening Server Manager \u00b6 2. Select Manage , then Add Roles and Features \u00b6 3. Continue to click Next until you get to the Server Roles page. Select Web Server (IIS) and click Next . \u00b6 4. On the Features page, expand .NET Framework 4.7 Features , select ASP.NET 4.7 , click Next . \u00b6 This may display .NET Framework 4.6 or 4.5 Features on older Server versions. 5. On the Role Services Page , scroll down to Application Development and check the box . Expand the selection and select ASP.NET 4.7 , this automatically selects the other options for you. Then click Next , and finally Install . \u00b6 This may display .NET Framework 4.6 or 4.5 Features on older Server versions. This concludes Install IIS With Web Application Development Support. Check this off of your Installation checklist now.","title":"Install IIS"},{"location":"getting-started/install-iis/#install-iis","text":"Start filling in the the Server Topology Worksheet under Application Server 1 now. Provide the FQDN and server version.","title":"Install IIS"},{"location":"getting-started/install-iis/#1-begin-by-opening-server-manager","text":"","title":"1. Begin by opening Server Manager"},{"location":"getting-started/install-iis/#2-select-manage-then-add-roles-and-features","text":"","title":"2. Select Manage, then Add Roles and Features"},{"location":"getting-started/install-iis/#3-continue-to-click-next-until-you-get-to-the-server-roles-page-select-web-server-iis-and-click-next","text":"","title":"3. Continue to click Next until you get to the Server Roles page.  Select Web Server (IIS) and click Next."},{"location":"getting-started/install-iis/#4-on-the-features-page-expand-net-framework-47-features-select-aspnet-47-click-next","text":"This may display .NET Framework 4.6 or 4.5 Features on older Server versions.","title":"4. On the Features page, expand .NET Framework 4.7 Features, select ASP.NET 4.7, click Next."},{"location":"getting-started/install-iis/#5-on-the-role-services-page-scroll-down-to-application-development-and-check-the-box-expand-the-selection-and-select-aspnet-47-this-automatically-selects-the-other-options-for-you-then-click-next-and-finally-install","text":"This may display .NET Framework 4.6 or 4.5 Features on older Server versions. This concludes Install IIS With Web Application Development Support. Check this off of your Installation checklist now.","title":"5. On the Role Services Page, scroll down to Application Development and check the box.  Expand the selection and select ASP.NET 4.7, this automatically selects the other options for you.  Then click Next, and finally Install."},{"location":"getting-started/install-toec/","text":"Install Toec Via Cmd Or Powershell \u00b6 Now that the Toec MSI has been transformed, we can begin installing it to some test clients. The Toec MSI can only be installed from a cmd line or other deployment tool. There is no GUI and cannot be installed just double clicking the file. This section will cover installing Toec from cmd or powershell. In the following example, all files were copied to the root C drive. Change your paths as necessary. This example also uses powershell, but a cmd prompt would also work. Copy the correct Toec MSI for the architecture of the PC and the Toec-Transform.mst file to a location on the destination PC (c:\\ in these examples). Open PowerShell as administrator Change directory to the MSI location with the command cd c:\\ Install Toec with the following command: .\\Toec-1.1.0-x64.msi TRANSFORMS=Toec-Transform.mst After installation is complete, verify the Service installed and is running, in services.msc This Concludes Install Toec Via Cmd / PowerShell. Check this off of your Installation checklist now.","title":"Install Client Via Cmd / Powershell"},{"location":"getting-started/install-toec/#install-toec-via-cmd-or-powershell","text":"Now that the Toec MSI has been transformed, we can begin installing it to some test clients. The Toec MSI can only be installed from a cmd line or other deployment tool. There is no GUI and cannot be installed just double clicking the file. This section will cover installing Toec from cmd or powershell. In the following example, all files were copied to the root C drive. Change your paths as necessary. This example also uses powershell, but a cmd prompt would also work. Copy the correct Toec MSI for the architecture of the PC and the Toec-Transform.mst file to a location on the destination PC (c:\\ in these examples). Open PowerShell as administrator Change directory to the MSI location with the command cd c:\\ Install Toec with the following command: .\\Toec-1.1.0-x64.msi TRANSFORMS=Toec-Transform.mst After installation is complete, verify the Service installed and is running, in services.msc This Concludes Install Toec Via Cmd / PowerShell. Check this off of your Installation checklist now.","title":"Install Toec Via Cmd Or Powershell"},{"location":"getting-started/install-webapps/","text":"Install Toems Web Applications \u00b6 1. Download the latest version of Theopenem from https://theopenem.com/downloads \u00b6 2. Verify the Sha256 Hash of the zip file \u00b6 Open powershell Enter Get-FileHash [theopenem zip location] Example powershell Get-FileHash c:\\users\\username\\downloads\\Theopenem-1.1.0.zip Visit https://github.com/theopenem/Sha256Values to get the correct hash value for your version. If the hash values do not match, please stop the installation and contact support@theopenem.com 3. Extract the zip contents to your desktop \u00b6 You should now have a folder on you desktop named Theopenem-1.1.0 4. Open Theopenem-1.1.0 folder and copy the subfolder theopenem into the IIS wwwroot . \u00b6 On a default Windows Server Installation, this directory is located at c:\\inetpub\\wwwroot\\ . Your folder structure should now look like c:\\inetpub\\wwwroot\\theopenem , inside this folder should be three sub directories. Toems-UI Toems-API Toec-API Those 3 folders represent the three different web applications needed to run Theopenem. If this specific server is not going to run all 3 applications, you should delete the extra applications now Continue filling in the Server Topology Worksheet under Application Server 1. Check the appropriate roles this server will provide. 5. Open IIS Manager , Go to start or run and enter inetmgr \u00b6 This next step assumes no other web applications are running on this server, deleting the default web site could delete any existing web applications. 6. Expand the server name, expand sites, right click on Default Web Site , select remove \u00b6 7. Right click on Sites , select Add Website \u00b6 8. When the Add Website Form opens, enter the following values: \u00b6 attribute value Site Name Toems-UI Physical Path c:\\inetpub\\wwwroot\\theopenem\\Toems-UI Leave all other values as default and click OK 8. Once again, right click on Sites , select Add Website with the following values: \u00b6 attribute value Site Name Toems-API Physical Path c:\\inetpub\\wwwroot\\theopenem\\Toems-API Port 8080 Leave all other values as default and click OK 9. One last time, right click on Sites , select Add Website with the following values: \u00b6 attribute value Site Name Toec-API Physical Path c:\\inetpub\\wwwroot\\theopenem\\Toec-API Port 8888 Leave all other values as default and click OK 10. Right click on Toems-UI , select Manage Website , select Advanced Settings \u00b6 11. Change Preload Enabled to True \u00b6 12. Apply the previous Preload step to both the Toems-API and Toec-API Websites \u00b6 13. Select Application Pools from the menu on the left, right click Toec-API , select Advanced Settings \u00b6 14. Change the following values \u00b6 attribute value Start Mode Always Running Load User Profile True 15. Apply the previous Start Mode / Load User Profile step to both the Toems-API and Toec-API Application Pools \u00b6 This concludes Install Toems Web Applications. Check this off of your Installation checklist now.","title":"Install Toems Web Applications"},{"location":"getting-started/install-webapps/#install-toems-web-applications","text":"","title":"Install Toems Web Applications"},{"location":"getting-started/install-webapps/#1-download-the-latest-version-of-theopenem-from-httpstheopenemcomdownloads","text":"","title":"1. Download the latest version of Theopenem from https://theopenem.com/downloads"},{"location":"getting-started/install-webapps/#2-verify-the-sha256-hash-of-the-zip-file","text":"Open powershell Enter Get-FileHash [theopenem zip location] Example powershell Get-FileHash c:\\users\\username\\downloads\\Theopenem-1.1.0.zip Visit https://github.com/theopenem/Sha256Values to get the correct hash value for your version. If the hash values do not match, please stop the installation and contact support@theopenem.com","title":"2. Verify the Sha256 Hash of the zip file"},{"location":"getting-started/install-webapps/#3-extract-the-zip-contents-to-your-desktop","text":"You should now have a folder on you desktop named Theopenem-1.1.0","title":"3. Extract the zip contents to your desktop"},{"location":"getting-started/install-webapps/#4-open-theopenem-110-folder-and-copy-the-subfolder-theopenem-into-the-iis-wwwroot","text":"On a default Windows Server Installation, this directory is located at c:\\inetpub\\wwwroot\\ . Your folder structure should now look like c:\\inetpub\\wwwroot\\theopenem , inside this folder should be three sub directories. Toems-UI Toems-API Toec-API Those 3 folders represent the three different web applications needed to run Theopenem. If this specific server is not going to run all 3 applications, you should delete the extra applications now Continue filling in the Server Topology Worksheet under Application Server 1. Check the appropriate roles this server will provide.","title":"4. Open Theopenem-1.1.0 folder and copy the subfolder theopenem into the IIS wwwroot."},{"location":"getting-started/install-webapps/#5-open-iis-manager-go-to-start-or-run-and-enter-inetmgr","text":"This next step assumes no other web applications are running on this server, deleting the default web site could delete any existing web applications.","title":"5. Open IIS Manager, Go to start or run and enter inetmgr"},{"location":"getting-started/install-webapps/#6-expand-the-server-name-expand-sites-right-click-on-default-web-site-select-remove","text":"","title":"6. Expand the server name, expand sites, right click on Default Web Site, select remove"},{"location":"getting-started/install-webapps/#7-right-click-on-sites-select-add-website","text":"","title":"7. Right click on Sites, select Add Website"},{"location":"getting-started/install-webapps/#8-when-the-add-website-form-opens-enter-the-following-values","text":"attribute value Site Name Toems-UI Physical Path c:\\inetpub\\wwwroot\\theopenem\\Toems-UI Leave all other values as default and click OK","title":"8. When the Add Website Form opens, enter the following values:"},{"location":"getting-started/install-webapps/#8-once-again-right-click-on-sites-select-add-website-with-the-following-values","text":"attribute value Site Name Toems-API Physical Path c:\\inetpub\\wwwroot\\theopenem\\Toems-API Port 8080 Leave all other values as default and click OK","title":"8. Once again, right click on Sites, select Add Website with the following values:"},{"location":"getting-started/install-webapps/#9-one-last-time-right-click-on-sites-select-add-website-with-the-following-values","text":"attribute value Site Name Toec-API Physical Path c:\\inetpub\\wwwroot\\theopenem\\Toec-API Port 8888 Leave all other values as default and click OK","title":"9. One last time, right click on Sites, select Add Website with the following values:"},{"location":"getting-started/install-webapps/#10-right-click-on-toems-ui-select-manage-website-select-advanced-settings","text":"","title":"10. Right click on Toems-UI, select Manage Website, select Advanced Settings"},{"location":"getting-started/install-webapps/#11-change-preload-enabled-to-true","text":"","title":"11. Change Preload Enabled to True"},{"location":"getting-started/install-webapps/#12-apply-the-previous-preload-step-to-both-the-toems-api-and-toec-api-websites","text":"","title":"12. Apply the previous Preload step to both the Toems-API and Toec-API Websites"},{"location":"getting-started/install-webapps/#13-select-application-pools-from-the-menu-on-the-left-right-click-toec-api-select-advanced-settings","text":"","title":"13. Select Application Pools from the menu on the left, right click Toec-API, select Advanced Settings"},{"location":"getting-started/install-webapps/#14-change-the-following-values","text":"attribute value Start Mode Always Running Load User Profile True","title":"14. Change the following values"},{"location":"getting-started/install-webapps/#15-apply-the-previous-start-mode-load-user-profile-step-to-both-the-toems-api-and-toec-api-application-pools","text":"This concludes Install Toems Web Applications. Check this off of your Installation checklist now.","title":"15. Apply the previous Start Mode / Load User Profile step to both the Toems-API and Toec-API Application Pools"},{"location":"getting-started/overview/","text":"Overview \u00b6 This server installation guide will provide a complete walk through for the setup of Theopenem server (Toems) components. These components include the Toems-UI , the Toems-API , the Toec-API , and database . The installation of the endpoint agent (Toec) will be covered in the Client Installation Tutorial. If you have not yet read the Welcome Introduction , please read it before continuing, also before starting this guide, ensure you have downloaded the Installation Checklist and Server Topology documents . Fill out the documents as you move forward through the guide. Installation Documents Downloads Installation Checklist Server Topology This guide is fairly lengthy and may seem wordy for anyone with Web application / database experience. As you may have noticed, there is no automated installer for Toems. This forces you to learn some of the fundamental concepts of Theopenem and will enhance your troubleshooting capabilities. An experienced Theopenem user can setup everything up in about 20 minutes. If this is your first time installing Theopenem, allow yourself 2-3 hours to complete this guide. Prerequisites \u00b6 Install .NET 4.6 (Only required if your server version is Server 2012R2. Newer server versions already have a greater version of .NET installed) . .NET 4.6.2 can be downloaded here . If you wish to install a newer version of .NET greater than 4.6, that is fine also. Optionally download and install Notepad++ . Though not required, it will prove helpful when modifying the appropriate config files in the upcoming sections. This Concludes the Prerequisites. Check this off of your Installation checklist now","title":"Server Overview/Prereqs"},{"location":"getting-started/overview/#overview","text":"This server installation guide will provide a complete walk through for the setup of Theopenem server (Toems) components. These components include the Toems-UI , the Toems-API , the Toec-API , and database . The installation of the endpoint agent (Toec) will be covered in the Client Installation Tutorial. If you have not yet read the Welcome Introduction , please read it before continuing, also before starting this guide, ensure you have downloaded the Installation Checklist and Server Topology documents . Fill out the documents as you move forward through the guide. Installation Documents Downloads Installation Checklist Server Topology This guide is fairly lengthy and may seem wordy for anyone with Web application / database experience. As you may have noticed, there is no automated installer for Toems. This forces you to learn some of the fundamental concepts of Theopenem and will enhance your troubleshooting capabilities. An experienced Theopenem user can setup everything up in about 20 minutes. If this is your first time installing Theopenem, allow yourself 2-3 hours to complete this guide.","title":"Overview"},{"location":"getting-started/overview/#prerequisites","text":"Install .NET 4.6 (Only required if your server version is Server 2012R2. Newer server versions already have a greater version of .NET installed) . .NET 4.6.2 can be downloaded here . If you wish to install a newer version of .NET greater than 4.6, that is fine also. Optionally download and install Notepad++ . Though not required, it will prove helpful when modifying the appropriate config files in the upcoming sections. This Concludes the Prerequisites. Check this off of your Installation checklist now","title":"Prerequisites"},{"location":"getting-started/scheduled-tasks/","text":"Create Scheduled Task \u00b6 This section is only performed on the server that has the Toems-API Server Role set as primary. If you remember, this role was defined in the Toems-API Web.config file. Theopenem has a series of tasks that run at various time intervals. This list can be found in Admin Settings->Task Scheduler. These tasks are all initiated from within the Toems-API web application as long as it hasn\u2019t gone to sleep. The problem is that the Toems-API is only used when someone logs into the Toems-UI. This means that the Toems-API is a very low traffic application and most of the time will be asleep preventing the Task Scheduler from running. This section will setup a Windows Task to keep the Toems-API awake. 1. Create A Local User To Run The Task \u00b6 Go to start or run and enter lusrmgr.msc Right click on Users and select New User Enter toemskeepalive for the User name: Create a Password for the user Uncheck User must change password at next logon Check User cannot change password Check Password never expires Click Create Close any remaining dialog boxes 2. Give the User Batch Job Rights \u00b6 Go to start or run and enter secpol.msc Expand Local Policies and Select User Rights Assignment In the Window on the right, scroll to the bottom and find Log on as a batch job, double click it Click Add User or Group Ensure the location is set to the local computer and not the domain Enter toemskeepalive in the object names box, click Ok Click Ok on any remaining dialog boxes 3. Create Windows Scheduled Task \u00b6 Open the Windows Task Scheduler Right click on Task Scheduler (Local), select Import Task Navigate to the Theopenem-1.1.0 folder you extracted back in the Install Toems Web Applications Section Select the Toems-API Keepalive.xml file, click Open On the General Tab, Click Change User or Group Enter toemskeepalive in the object names box, remember to change the location to local, click Ok Change the radio button to Run whether user is logged on or not Check the box for Do not store password Click OK, enter the toemskeepalive password when prompted This Concludes the Scheduled Tasks. Check this off of your Installation checklist now.","title":"Create Scheduled Task"},{"location":"getting-started/scheduled-tasks/#create-scheduled-task","text":"This section is only performed on the server that has the Toems-API Server Role set as primary. If you remember, this role was defined in the Toems-API Web.config file. Theopenem has a series of tasks that run at various time intervals. This list can be found in Admin Settings->Task Scheduler. These tasks are all initiated from within the Toems-API web application as long as it hasn\u2019t gone to sleep. The problem is that the Toems-API is only used when someone logs into the Toems-UI. This means that the Toems-API is a very low traffic application and most of the time will be asleep preventing the Task Scheduler from running. This section will setup a Windows Task to keep the Toems-API awake.","title":"Create Scheduled Task"},{"location":"getting-started/scheduled-tasks/#1-create-a-local-user-to-run-the-task","text":"Go to start or run and enter lusrmgr.msc Right click on Users and select New User Enter toemskeepalive for the User name: Create a Password for the user Uncheck User must change password at next logon Check User cannot change password Check Password never expires Click Create Close any remaining dialog boxes","title":"1. Create A Local User To Run The Task"},{"location":"getting-started/scheduled-tasks/#2-give-the-user-batch-job-rights","text":"Go to start or run and enter secpol.msc Expand Local Policies and Select User Rights Assignment In the Window on the right, scroll to the bottom and find Log on as a batch job, double click it Click Add User or Group Ensure the location is set to the local computer and not the domain Enter toemskeepalive in the object names box, click Ok Click Ok on any remaining dialog boxes","title":"2. Give the User Batch Job Rights"},{"location":"getting-started/scheduled-tasks/#3-create-windows-scheduled-task","text":"Open the Windows Task Scheduler Right click on Task Scheduler (Local), select Import Task Navigate to the Theopenem-1.1.0 folder you extracted back in the Install Toems Web Applications Section Select the Toems-API Keepalive.xml file, click Open On the General Tab, Click Change User or Group Enter toemskeepalive in the object names box, remember to change the location to local, click Ok Change the radio button to Run whether user is logged on or not Check the box for Do not store password Click OK, enter the toemskeepalive password when prompted This Concludes the Scheduled Tasks. Check this off of your Installation checklist now.","title":"3. Create Windows Scheduled Task"},{"location":"getting-started/storage/","text":"Create Storage Directory And Set Permissions \u00b6 A local file storage folder must be created to store all file uploads, external downloads, attachments, and Toec agent upgrade files. If you are running Theopenem from a single server, these files will all go directly to this folder after upload from the Web UI. If you are running multiple Theopenem servers, these files will instead first go to a file share and will then be replicated to each server\u2019s local storage path. Regardless if you are running a single Theopenem server or in a cluster, local storage path is always used. Determine a local storage location Think of the best place for this folder, it must be large enough to fit all of the software you will be deploying. If you only have 1 drive, then at the root c:\\ works fine. Something such as c:\\theopenem_local_storage is suggested. 1. Create Local Storage Directory \u00b6 Create the folder at the designated location now. This example uses c:\\theopenem_local_storage. Continue filling in the Server Topology Worksheet under Application Server 1. Fill in the Local Storage Path. After the folder is created, Right click, select properties, then the Security tab, then Edit, then Add Ensure that From this location says the name of the server and not the domain name, if so change it by clicking on Locations Enter IIS AppPool\\Toems-API;IIS AppPool\\Toec-API click OK Toec-API and Toems-API should now appear in the security list, select Toec-API and check the Modify Permission in the Allow column, do the same for Toems-API. Click OK on any remaining dialog boxes. 2. Set Web Application Log Folder Permissions \u00b6 The following steps are required to give each web application permissions to write to the log file. The steps are very similar to section 1. Navigate to c:\\inetpub\\wwwroot\\theopenem\\Toec-API\\private Right click on logs , select properties , select the Security tab , select Edit , then Add Add the IIS AppPool\\Toec-API user with modify permissions Navigate to c:\\inetpub\\wwwroot\\theopenem\\Toems-API\\private Right click on logs , select properties , select the Security tab , select Edit , then Add Add the IIS AppPool\\Toems-API user with modify permissions Navigate to c:\\inetpub\\wwwroot\\theopenem\\Toems-UI\\private Right click on logs , select properties , select the Security tab , select Edit , then Add Add the IIS AppPool\\Toems-UI user with modify permissions This concludes Create Storage Directory And Set Permissions. Check this off of your Installation checklist now.","title":"Create Storage Directory"},{"location":"getting-started/storage/#create-storage-directory-and-set-permissions","text":"A local file storage folder must be created to store all file uploads, external downloads, attachments, and Toec agent upgrade files. If you are running Theopenem from a single server, these files will all go directly to this folder after upload from the Web UI. If you are running multiple Theopenem servers, these files will instead first go to a file share and will then be replicated to each server\u2019s local storage path. Regardless if you are running a single Theopenem server or in a cluster, local storage path is always used. Determine a local storage location Think of the best place for this folder, it must be large enough to fit all of the software you will be deploying. If you only have 1 drive, then at the root c:\\ works fine. Something such as c:\\theopenem_local_storage is suggested.","title":"Create Storage Directory And Set Permissions"},{"location":"getting-started/storage/#1-create-local-storage-directory","text":"Create the folder at the designated location now. This example uses c:\\theopenem_local_storage. Continue filling in the Server Topology Worksheet under Application Server 1. Fill in the Local Storage Path. After the folder is created, Right click, select properties, then the Security tab, then Edit, then Add Ensure that From this location says the name of the server and not the domain name, if so change it by clicking on Locations Enter IIS AppPool\\Toems-API;IIS AppPool\\Toec-API click OK Toec-API and Toems-API should now appear in the security list, select Toec-API and check the Modify Permission in the Allow column, do the same for Toems-API. Click OK on any remaining dialog boxes.","title":"1. Create Local Storage Directory"},{"location":"getting-started/storage/#2-set-web-application-log-folder-permissions","text":"The following steps are required to give each web application permissions to write to the log file. The steps are very similar to section 1. Navigate to c:\\inetpub\\wwwroot\\theopenem\\Toec-API\\private Right click on logs , select properties , select the Security tab , select Edit , then Add Add the IIS AppPool\\Toec-API user with modify permissions Navigate to c:\\inetpub\\wwwroot\\theopenem\\Toems-API\\private Right click on logs , select properties , select the Security tab , select Edit , then Add Add the IIS AppPool\\Toems-API user with modify permissions Navigate to c:\\inetpub\\wwwroot\\theopenem\\Toems-UI\\private Right click on logs , select properties , select the Security tab , select Edit , then Add Add the IIS AppPool\\Toems-UI user with modify permissions This concludes Create Storage Directory And Set Permissions. Check this off of your Installation checklist now.","title":"2. Set Web Application Log Folder Permissions"},{"location":"getting-started/test-apps/","text":"Test The Web Applications \u00b6 Now is a good time to test the 3 web applications before continuing on. These tests are all done through your web browser, and should be done from a remote computer to test the firewall rules as well. Your Theopenem server should now be reachable by the server\u2019s FQDN and corresponding port. In these examples the server name is toems-01.theopenem.com and should be replaced by your actual server name. 1. Test Toems-API (Backend) \u00b6 Open a web browser Navigate to http://toems-01.theopenem.com:8080/Setting/VerifyDb The page should respond with the number 60 If this step was successful the Toems-API is running and can access the database 2. Test Toec-API (Client connections) \u00b6 Open a web browser Navigate to http://toems-01.theopenem.com:8888/Provision/VerifyDb The page should respond with the number 60 If this step was successful the Toec-API is running and can access the database 3. Test Toems-UI (Frontend) \u00b6 Open a web browser Navigate to http://toems-01.theopenem.com You should be greeted by the login page Login With: Username: toemsadmin Password: toemsadmin If this step was successful the Toems-UI is running and can communicate with Toems-API. Do not attempt to configure anything in the Toems-UI yet. Close your browser. If any of these 3 tests failed, revisit all sections up to this point, looking for any discrepancies, otherwise, Testing The Web Applications Is Complete. Check this off of your Installation checklist now.","title":"Test The Web Applications"},{"location":"getting-started/test-apps/#test-the-web-applications","text":"Now is a good time to test the 3 web applications before continuing on. These tests are all done through your web browser, and should be done from a remote computer to test the firewall rules as well. Your Theopenem server should now be reachable by the server\u2019s FQDN and corresponding port. In these examples the server name is toems-01.theopenem.com and should be replaced by your actual server name.","title":"Test The Web Applications"},{"location":"getting-started/test-apps/#1-test-toems-api-backend","text":"Open a web browser Navigate to http://toems-01.theopenem.com:8080/Setting/VerifyDb The page should respond with the number 60 If this step was successful the Toems-API is running and can access the database","title":"1.  Test Toems-API (Backend)"},{"location":"getting-started/test-apps/#2-test-toec-api-client-connections","text":"Open a web browser Navigate to http://toems-01.theopenem.com:8888/Provision/VerifyDb The page should respond with the number 60 If this step was successful the Toec-API is running and can access the database","title":"2.  Test Toec-API (Client connections)"},{"location":"getting-started/test-apps/#3-test-toems-ui-frontend","text":"Open a web browser Navigate to http://toems-01.theopenem.com You should be greeted by the login page Login With: Username: toemsadmin Password: toemsadmin If this step was successful the Toems-UI is running and can communicate with Toems-API. Do not attempt to configure anything in the Toems-UI yet. Close your browser. If any of these 3 tests failed, revisit all sections up to this point, looking for any discrepancies, otherwise, Testing The Web Applications Is Complete. Check this off of your Installation checklist now.","title":"3.  Test Toems-UI (Frontend)"},{"location":"getting-started/transform-toec/","text":"Transform The Toec MSI \u00b6 In order for Toec to successfully communicate with Toems, it needs to trust the Toems Certificate Authority. To do this, we need to embed your Toems Certificate Authority into the Toec MSI, this will be accomplished through a transform file created with Orca. This process is only done one time, even if an update is released for Toec this does not need applied again. The generated MST file will work with future versions. 1. Export the Toems CA \u00b6 Login to the Toems-UI as an administrator Select Admin Settings->Certificates Click Export on the Toems CA certificate. It will have a Type of Authority. Save the file when prompted, rename it to something such as Toems-CA. 2. Modify the MSI \u00b6 Open Orca as Administrator from your Start Menu Select File, Open, and select either of the Toec-Agent MSI files that were included with Theopenem download package from the Server Installation. Either the 32 or 64 bit MSI can be selected. Select Transform, then New Transform Click on Binary under the Tables Column, Then double click on [Binary Data] next to ToemsCA.Binary. A dialog box will open, browse to the Toems-CA certificate that was exported in section 1. Ensure Read binary from filename is selected, click OK. Click OK again when prompted to overwrite. Keep Orca open and Log back into the Toems-UI and select Admin Settings->Client, scroll to the bottom to find Client MSI Arguments. You should see what appears to be a long string. It is actually 3 separate variables needed to install Toec. Keep this window open and return to Orca. In Orca, select Property under the Tables column. In the right side, right click on the empty white space and select Add Row. For the property, enter SERVER_KEY case sensitive, and for the value copy the value from the Toems-UI SERVER_KEY= Click OK Repeat the previous step for the CA_THUMBPRINT and COM_SERVERS properties. Your Orca window should now look something like this, but with your values. From the top menu bar Select Transform, then Generate Transform, for the filename use something such as Toec-Transform. Close Orca This Concludes Transform The Toec MSI. Check this off of your Installation checklist now.","title":"Transform The Toec MSI"},{"location":"getting-started/transform-toec/#transform-the-toec-msi","text":"In order for Toec to successfully communicate with Toems, it needs to trust the Toems Certificate Authority. To do this, we need to embed your Toems Certificate Authority into the Toec MSI, this will be accomplished through a transform file created with Orca. This process is only done one time, even if an update is released for Toec this does not need applied again. The generated MST file will work with future versions.","title":"Transform The Toec MSI"},{"location":"getting-started/transform-toec/#1-export-the-toems-ca","text":"Login to the Toems-UI as an administrator Select Admin Settings->Certificates Click Export on the Toems CA certificate. It will have a Type of Authority. Save the file when prompted, rename it to something such as Toems-CA.","title":"1. Export the Toems CA"},{"location":"getting-started/transform-toec/#2-modify-the-msi","text":"Open Orca as Administrator from your Start Menu Select File, Open, and select either of the Toec-Agent MSI files that were included with Theopenem download package from the Server Installation. Either the 32 or 64 bit MSI can be selected. Select Transform, then New Transform Click on Binary under the Tables Column, Then double click on [Binary Data] next to ToemsCA.Binary. A dialog box will open, browse to the Toems-CA certificate that was exported in section 1. Ensure Read binary from filename is selected, click OK. Click OK again when prompted to overwrite. Keep Orca open and Log back into the Toems-UI and select Admin Settings->Client, scroll to the bottom to find Client MSI Arguments. You should see what appears to be a long string. It is actually 3 separate variables needed to install Toec. Keep this window open and return to Orca. In Orca, select Property under the Tables column. In the right side, right click on the empty white space and select Add Row. For the property, enter SERVER_KEY case sensitive, and for the value copy the value from the Toems-UI SERVER_KEY= Click OK Repeat the previous step for the CA_THUMBPRINT and COM_SERVERS properties. Your Orca window should now look something like this, but with your values. From the top menu bar Select Transform, then Generate Transform, for the filename use something such as Toec-Transform. Close Orca This Concludes Transform The Toec MSI. Check this off of your Installation checklist now.","title":"2. Modify the MSI"},{"location":"getting-started/update-web-config/","text":"Update Theopenem Web.config Files \u00b6 Each web application has a web.config file that must be updated before the application can be used. It is highly recommended to use a good text editor, such as Notepad++ for editing these files. 1. Update Toems-UI Web.config \u00b6 Open your text as editor as administrator Open the file c:\\inetpub\\wwwroot\\theopenem\\Toems-UI\\Web.config Scroll to the bottom of the file to find the <appSettings> section Change the value for ServerName to anything you want to identify this server. When multiple servers are used, this is displayed in the UI to show which server you are connected to. Change the value for ApplicationApiUrl to the URL for your Toems-API. This value is always relative to your Toems-UI server. If you installed the Toems-API and Toems-UI on the same server the value should always be http://localhost:8080 . This value tells the Toems-UI(frontend) where to find the Toems-API(backend). Change the value for UploadApiUrl to the URL for your Toems-API for remote connections, in other words, the URL that can be used to for end users to communicate with the Toems-API. This value is always relative to your Theopenem Administrators web browser. This would typically be the FQDN of the server, and the port the API is running on, such as, http://toems-01.theopenem.com:8080/ . If you have been filling out the Server Topology Worksheet, this is the FQDN of the Application Server 1 section with the port of the Toems-API role The UploadApiUrl value is strictly used for uploading files to Theopenem through the UI. Typically when browsing the UI, your browser connects to the Toems-UI application and the Toems-UI connects to the Toems-API, with the exception of uploading files. When uploading a file through the Toems-UI, your browser will connect directly to the Toems-API, skipping the Toems-UI application. If you are having issues uploading files, it is most likely because this value is incorrect. Save and close the file 2. Update Toems-API Web.config \u00b6 Open your text as editor as administrator Open the file c:\\inetpub\\wwwroot\\theopenem\\Toems-API\\Web.config Scroll to the bottom of the file to find the <connectionStrings> section. The connection string is used to connect to the database. An example for both MS SQL and MariaDB are provided in the file. Uncomment the correct example for your database by removing the <!\u2013 before the example, and the \u2013> after the example The commented MS SQL connection string looks like this xml <!-- Microsoft SQL Server EXAMPLE --> <!-- <add name=\"toems\" connectionString=\"Data Source=[server-name];Initial Catalog=theopenem;Integrated Security=False;User Id=[user];Password=[password];MultipleActiveResultSets=True\" providerName=\"System.Data.SqlClient\" /> --> After the comments are removed, it looks like this xml <!-- Microsoft SQL Server EXAMPLE --> <add name=\"toems\" connectionString=\"Data Source=[server-name];Initial Catalog=theopenem;Integrated Security=False;User Id=[user];Password=[password];MultipleActiveResultSets=True\" providerName=\"System.Data.SqlClient\" /> Now that the connectionString is uncommented, it\u2019s time to update it. Change the [server-name] , [user] , and [password] values to the correct values, the brackets should be removed. If you have been filling out the Server Topology Worksheet, the values needed above are the Database Name, Database Username, and Database Password from the Database Server Section Important, If you used any of the following special characters in the password, it must be changed to the corresponding Entity Name value Character Description Entity Name non-breaking space &nbsp; < less than &lt; > greater than &gt; & ampersand &amp; \" quote &quot; ' apostrophe &apos; A final connectionString for MS SQL Server may look something like this xml <add name=\"toems\" connectionString=\"Data Source=db01.theopenem.com;Initial Catalog=theopenem;Integrated Security=False;User Id=theopenem_db_login;Password=Ihjskessnkj;MultipleActiveResultSets=True\" providerName=\"System.Data.SqlClient\" /> Or A final connectionString for MariaDB may look something like this xml <add name=\"toems\" connectionString=\"Server=localhost;Port=3306;Database=theopenem;Uid=theopenem_db_user;Pwd=jjierjsneyy;\" providerName=\"MySql.Data.MySqlClient\" /> Scroll down to the <appSettings> section Update the DbEncryptionKey value to a random string (A guid from https://www.guidgen.com works nicely) . This value is used to encrypt sensitive data that is stored in the database. Save and close the file The DbEncryptionKey value must be the same on all Toems-API and Toec-Api Applications It is extremely important that you do not lose this key. If the key is lost, Theopenem will fail to function, your data will be lost, and endpoints will not be able to check-in Continue filling in the Server Topology Worksheet, fill in the Application Server 1 Toems-API DbEncryptionKey 3. Update Toec-API Web.config \u00b6 Open your text as editor as administrator Open the file c:\\inetpub\\wwwroot\\theopenem\\Toec-API\\Web.config Scroll to the bottom of the file to find the <connectionStrings> section Update the connection string to match the string you created for the Toems-API web.config in section 2 Scroll down to the <appSettings> section Update the DbEncryptionKey value to the same value that was used for the Toems-API web.config file in section 2 If you are filling in the Server Topology Worksheet, this is the Toems-API DbEncryptionKey from Application Server 1 Continue filling in the Server Topology Worksheet, fill in the Application Server 1 Toec-API DbEncryptionKey This concludes Update Theopenem web.config Files. Check this off of your Installation checklist now.","title":"Update Web.config"},{"location":"getting-started/update-web-config/#update-theopenem-webconfig-files","text":"Each web application has a web.config file that must be updated before the application can be used. It is highly recommended to use a good text editor, such as Notepad++ for editing these files.","title":"Update Theopenem Web.config Files"},{"location":"getting-started/update-web-config/#1-update-toems-ui-webconfig","text":"Open your text as editor as administrator Open the file c:\\inetpub\\wwwroot\\theopenem\\Toems-UI\\Web.config Scroll to the bottom of the file to find the <appSettings> section Change the value for ServerName to anything you want to identify this server. When multiple servers are used, this is displayed in the UI to show which server you are connected to. Change the value for ApplicationApiUrl to the URL for your Toems-API. This value is always relative to your Toems-UI server. If you installed the Toems-API and Toems-UI on the same server the value should always be http://localhost:8080 . This value tells the Toems-UI(frontend) where to find the Toems-API(backend). Change the value for UploadApiUrl to the URL for your Toems-API for remote connections, in other words, the URL that can be used to for end users to communicate with the Toems-API. This value is always relative to your Theopenem Administrators web browser. This would typically be the FQDN of the server, and the port the API is running on, such as, http://toems-01.theopenem.com:8080/ . If you have been filling out the Server Topology Worksheet, this is the FQDN of the Application Server 1 section with the port of the Toems-API role The UploadApiUrl value is strictly used for uploading files to Theopenem through the UI. Typically when browsing the UI, your browser connects to the Toems-UI application and the Toems-UI connects to the Toems-API, with the exception of uploading files. When uploading a file through the Toems-UI, your browser will connect directly to the Toems-API, skipping the Toems-UI application. If you are having issues uploading files, it is most likely because this value is incorrect. Save and close the file","title":"1.  Update Toems-UI Web.config"},{"location":"getting-started/update-web-config/#2-update-toems-api-webconfig","text":"Open your text as editor as administrator Open the file c:\\inetpub\\wwwroot\\theopenem\\Toems-API\\Web.config Scroll to the bottom of the file to find the <connectionStrings> section. The connection string is used to connect to the database. An example for both MS SQL and MariaDB are provided in the file. Uncomment the correct example for your database by removing the <!\u2013 before the example, and the \u2013> after the example The commented MS SQL connection string looks like this xml <!-- Microsoft SQL Server EXAMPLE --> <!-- <add name=\"toems\" connectionString=\"Data Source=[server-name];Initial Catalog=theopenem;Integrated Security=False;User Id=[user];Password=[password];MultipleActiveResultSets=True\" providerName=\"System.Data.SqlClient\" /> --> After the comments are removed, it looks like this xml <!-- Microsoft SQL Server EXAMPLE --> <add name=\"toems\" connectionString=\"Data Source=[server-name];Initial Catalog=theopenem;Integrated Security=False;User Id=[user];Password=[password];MultipleActiveResultSets=True\" providerName=\"System.Data.SqlClient\" /> Now that the connectionString is uncommented, it\u2019s time to update it. Change the [server-name] , [user] , and [password] values to the correct values, the brackets should be removed. If you have been filling out the Server Topology Worksheet, the values needed above are the Database Name, Database Username, and Database Password from the Database Server Section Important, If you used any of the following special characters in the password, it must be changed to the corresponding Entity Name value Character Description Entity Name non-breaking space &nbsp; < less than &lt; > greater than &gt; & ampersand &amp; \" quote &quot; ' apostrophe &apos; A final connectionString for MS SQL Server may look something like this xml <add name=\"toems\" connectionString=\"Data Source=db01.theopenem.com;Initial Catalog=theopenem;Integrated Security=False;User Id=theopenem_db_login;Password=Ihjskessnkj;MultipleActiveResultSets=True\" providerName=\"System.Data.SqlClient\" /> Or A final connectionString for MariaDB may look something like this xml <add name=\"toems\" connectionString=\"Server=localhost;Port=3306;Database=theopenem;Uid=theopenem_db_user;Pwd=jjierjsneyy;\" providerName=\"MySql.Data.MySqlClient\" /> Scroll down to the <appSettings> section Update the DbEncryptionKey value to a random string (A guid from https://www.guidgen.com works nicely) . This value is used to encrypt sensitive data that is stored in the database. Save and close the file The DbEncryptionKey value must be the same on all Toems-API and Toec-Api Applications It is extremely important that you do not lose this key. If the key is lost, Theopenem will fail to function, your data will be lost, and endpoints will not be able to check-in Continue filling in the Server Topology Worksheet, fill in the Application Server 1 Toems-API DbEncryptionKey","title":"2.  Update Toems-API Web.config"},{"location":"getting-started/update-web-config/#3-update-toec-api-webconfig","text":"Open your text as editor as administrator Open the file c:\\inetpub\\wwwroot\\theopenem\\Toec-API\\Web.config Scroll to the bottom of the file to find the <connectionStrings> section Update the connection string to match the string you created for the Toems-API web.config in section 2 Scroll down to the <appSettings> section Update the DbEncryptionKey value to the same value that was used for the Toems-API web.config file in section 2 If you are filling in the Server Topology Worksheet, this is the Toems-API DbEncryptionKey from Application Server 1 Continue filling in the Server Topology Worksheet, fill in the Application Server 1 Toec-API DbEncryptionKey This concludes Update Theopenem web.config Files. Check this off of your Installation checklist now.","title":"3.  Update Toec-API Web.config"},{"location":"getting-started/web-config-revisited/","text":"Web.config Revisited \u00b6 Now that everything in Theopenem is configured, there are some final changes to make to the web.config files. 1. Update Toec-API web.config \u00b6 Open your text as editor as administrator Open the file c:\\inetpub\\wwwroot\\theopenem\\Toec-API\\Web.config Scroll to the bottom of the file to find the <appSettings> section Update the LocalStoragePath value to the directory you created back in the Create Storage Directory topic Save and close the file If you have been filling out the Server Topology Worksheet this would be the Local Storage Path of Application Server 1. 2. Update Toems-API web.config \u00b6 Open your text editor as administrator Open the file c:\\inetpub\\wwwroot\\theopenem\\Toems-API\\Web.config Scroll to the bottom of the file to find the <appSettings> section Update the LocalStoragePath value to the directory you created back in the Create Storage Directory topic If you have been filling out the Server Topology Worksheet this would be the Local Storage Path of Application Server 1. Update the AllowCAGen value to false Setting this value to false ensures no one accidentally generates new certificates in the Toems-UI, doing so would break all communications with all Toec agents Update the AllowProvisionKeyGen value to false Setting this value to false ensures no one accidentally generates a new provision key, doing so would break endpoint provisioning Update the ServerRole value to either primary or secondary If only 1 Theopenem server is being used, the role is always primary. If multiple Theopenem servers are used, only a single server can be set as primary. This concludes Web.config Revisited. Check this off of your Installation checklist now.","title":"Web.config Revisited"},{"location":"getting-started/web-config-revisited/#webconfig-revisited","text":"Now that everything in Theopenem is configured, there are some final changes to make to the web.config files.","title":"Web.config Revisited"},{"location":"getting-started/web-config-revisited/#1-update-toec-api-webconfig","text":"Open your text as editor as administrator Open the file c:\\inetpub\\wwwroot\\theopenem\\Toec-API\\Web.config Scroll to the bottom of the file to find the <appSettings> section Update the LocalStoragePath value to the directory you created back in the Create Storage Directory topic Save and close the file If you have been filling out the Server Topology Worksheet this would be the Local Storage Path of Application Server 1.","title":"1. Update Toec-API web.config"},{"location":"getting-started/web-config-revisited/#2-update-toems-api-webconfig","text":"Open your text editor as administrator Open the file c:\\inetpub\\wwwroot\\theopenem\\Toems-API\\Web.config Scroll to the bottom of the file to find the <appSettings> section Update the LocalStoragePath value to the directory you created back in the Create Storage Directory topic If you have been filling out the Server Topology Worksheet this would be the Local Storage Path of Application Server 1. Update the AllowCAGen value to false Setting this value to false ensures no one accidentally generates new certificates in the Toems-UI, doing so would break all communications with all Toec agents Update the AllowProvisionKeyGen value to false Setting this value to false ensures no one accidentally generates a new provision key, doing so would break endpoint provisioning Update the ServerRole value to either primary or secondary If only 1 Theopenem server is being used, the role is always primary. If multiple Theopenem servers are used, only a single server can be set as primary. This concludes Web.config Revisited. Check this off of your Installation checklist now.","title":"2. Update Toems-API web.config"},{"location":"tutorials/first-policy/","text":"Creating Your First Policy \u00b6 This last section is not required, but will provide you with a brief introduction on how to run some policies on your endpoints. By this point you should have at least 1 or 2 endpoints provisioned with Theopenem. These can be seen from the Toems-UI from the Computers->Search Active page. If you don\u2019t see anything listed there yet, double check the Computers->Approval Request page to make sure nothing is waiting for approval. 1. Create A Dynamic Group \u00b6 There a typically a few policies that you would want to run on all computers. These policies may include inventory tracking, user login tracking, and application usage tracking. A dynamic group is a group that is always changing the group members based on criteria that is defined. This first dynamic group will include all computers. Login to the Toems-UI Select Groups->New Provide a name such as All Computers Set the Group Type to Dynamic Provide a nice description . Leave all other options to their defaults Click Actions , then Add Group Select Dynamic Criteria from the Sub Navigation Menu Change Table to Computer , the Field to computer_name , the Operator to like , and the Value to % , click Add Click Actions , then Test Query . Should should see the list of all known computers. Click Actions , then Save Dynamic Criteria Your first group is complete. By default, Dynamic Groups update themselves every 3 hours. Saving the Dynamic Criteria again will also trigger the update. 2. Create An Inventory Policy \u00b6 Select Policies->New In the Name field, enter Collect Inventory In the Description field, enter Collect inventory on a weekly basis . Change the Frequency to OncePerWeek . Scroll down to Collect Inventory , change the drop down to Before Scroll down to Skip Server Logging Result , enable it. We don\u2019t really want a long history of inventory scans running every week clouding our logs. Click Actions , then Add Policy 3. Create A Tracking Policy \u00b6 Select Policies->New In the Name field, enter Track Users and Applications In the Description field, enter Starts the user login and application tracker each time the computer starts . Change the Trigger to Startup Leave the Frequency at Ongoing Scroll down, Enable Login Tracker and Application Monitor Skip the Server Logging Result once again. Click Actions , then Add Policy . 4. Apply The Policies \u00b6 In order for a Policy to take effect, it needs to be enabled and assigned to a group. Select Policies->Search Click Activate on each of the 2 policies listed Select Groups->Search Click View on the All Computers Group Click Available Policies from the Sub Nav Menu . Check the box for each of the Policies we just created. Click Actions , Add Selected Policies . That completes the inventory policies. Every computer that provisions with Theopenem will now do a weekly inventory scan as well as monitor application usage and user logins. The inventory scan will run at the next check-in for you provisioned endpoints which is every 60 minutes by default. The tracking policy only runs at startup, you will need to either reboot those endpoints or restart the Toec service to test it. 5. Deploy A Software Application In MSI Format \u00b6 For this example, we will create a new static group, targeting specific computers and then deploy 7-Zip. Select Groups->New Give the group a name such as Software Deployment Test Group Leave the Group Type as Static . Click Actions , Add Group Select Add Group Members from the Sub Nav Menu . Check the box next to each computer to add to the group. Click Actions , Add Selected Computers . Select Modules from the Navigation Menu . Select Software Modules , Then New Enter 7-Zip 18.06 for the Name Click Actions , Add Module Select Upload Files from the Sub Nav Menu Download 7-Zip from this link Drop the downloaded MSI into the Drop Files Here box , Click Upload Select Policies->New from the Navigation Menu Give the policy a name such as Install 7-Zip Change the Frequency to OncePerComputer Click Actions , Add Policy Select Available Modules from the Sub Nav Menu Check the box for 7-Zip 18.06 , Click Actions , Add Selected To Policy Click Actions then, Activate Policy Assign the Policy to the Software Deployment Test Group The next time any of the computers in that group startup or check-in, 7-Zip will automatically be installed. 6. Deploy A Software Application In Exe Format \u00b6 An exe can be deployed as long as it support silent options. This last example will silently deploy Firefox. We\u2019ll use a dynamic group to find computers that do not have firefox installed. Finally we\u2019ll introduce a new concept called external downloads. Select Groups-> New From the Navigation Menu For the name , enter Computers Missing Firefox Change the Group Type to Dynamic Click Actions , Add Group Select Dynamic Criteria from the Sub Nav Menu Change the And/Or dropdown to Not , the Table to Application , the Field to name , the Operator to like , and the Value to %firefox% ,click Add Click Actions , Save Dynamic Criteria Select Modules->Command Modules->New from the Navigation menu . For the name enter, Firefox 64.0.2 Click Actions , Add Module Select External Files from the Sub Nav menu Fill in a File Name , such as Firefox.exe , it can be any name you like, it\u2019s just a name for the downloaded file. Fill in the URL with https://ftp.mozilla.org/pub/firefox/releases/64.0.2/win64/en-US/Firefox%20Setup%2064.0.2.exe Click Add , Click Actions , Download Files Click General from the Sub Navigation Menu Enter firefox.exe in the Command Field Enter -ms in the Arguments Field Click Actions , Update Module Assign the module to a new Policy and assign that Policy to a Group With this Policy, anytime a computer is found without Firefox, it will automatically be deployed to that computer.","title":"First Policy Tutorial"},{"location":"tutorials/first-policy/#creating-your-first-policy","text":"This last section is not required, but will provide you with a brief introduction on how to run some policies on your endpoints. By this point you should have at least 1 or 2 endpoints provisioned with Theopenem. These can be seen from the Toems-UI from the Computers->Search Active page. If you don\u2019t see anything listed there yet, double check the Computers->Approval Request page to make sure nothing is waiting for approval.","title":"Creating Your First Policy"},{"location":"tutorials/first-policy/#1-create-a-dynamic-group","text":"There a typically a few policies that you would want to run on all computers. These policies may include inventory tracking, user login tracking, and application usage tracking. A dynamic group is a group that is always changing the group members based on criteria that is defined. This first dynamic group will include all computers. Login to the Toems-UI Select Groups->New Provide a name such as All Computers Set the Group Type to Dynamic Provide a nice description . Leave all other options to their defaults Click Actions , then Add Group Select Dynamic Criteria from the Sub Navigation Menu Change Table to Computer , the Field to computer_name , the Operator to like , and the Value to % , click Add Click Actions , then Test Query . Should should see the list of all known computers. Click Actions , then Save Dynamic Criteria Your first group is complete. By default, Dynamic Groups update themselves every 3 hours. Saving the Dynamic Criteria again will also trigger the update.","title":"1. Create A Dynamic Group"},{"location":"tutorials/first-policy/#2-create-an-inventory-policy","text":"Select Policies->New In the Name field, enter Collect Inventory In the Description field, enter Collect inventory on a weekly basis . Change the Frequency to OncePerWeek . Scroll down to Collect Inventory , change the drop down to Before Scroll down to Skip Server Logging Result , enable it. We don\u2019t really want a long history of inventory scans running every week clouding our logs. Click Actions , then Add Policy","title":"2. Create An Inventory Policy"},{"location":"tutorials/first-policy/#3-create-a-tracking-policy","text":"Select Policies->New In the Name field, enter Track Users and Applications In the Description field, enter Starts the user login and application tracker each time the computer starts . Change the Trigger to Startup Leave the Frequency at Ongoing Scroll down, Enable Login Tracker and Application Monitor Skip the Server Logging Result once again. Click Actions , then Add Policy .","title":"3. Create A Tracking Policy"},{"location":"tutorials/first-policy/#4-apply-the-policies","text":"In order for a Policy to take effect, it needs to be enabled and assigned to a group. Select Policies->Search Click Activate on each of the 2 policies listed Select Groups->Search Click View on the All Computers Group Click Available Policies from the Sub Nav Menu . Check the box for each of the Policies we just created. Click Actions , Add Selected Policies . That completes the inventory policies. Every computer that provisions with Theopenem will now do a weekly inventory scan as well as monitor application usage and user logins. The inventory scan will run at the next check-in for you provisioned endpoints which is every 60 minutes by default. The tracking policy only runs at startup, you will need to either reboot those endpoints or restart the Toec service to test it.","title":"4. Apply The Policies"},{"location":"tutorials/first-policy/#5-deploy-a-software-application-in-msi-format","text":"For this example, we will create a new static group, targeting specific computers and then deploy 7-Zip. Select Groups->New Give the group a name such as Software Deployment Test Group Leave the Group Type as Static . Click Actions , Add Group Select Add Group Members from the Sub Nav Menu . Check the box next to each computer to add to the group. Click Actions , Add Selected Computers . Select Modules from the Navigation Menu . Select Software Modules , Then New Enter 7-Zip 18.06 for the Name Click Actions , Add Module Select Upload Files from the Sub Nav Menu Download 7-Zip from this link Drop the downloaded MSI into the Drop Files Here box , Click Upload Select Policies->New from the Navigation Menu Give the policy a name such as Install 7-Zip Change the Frequency to OncePerComputer Click Actions , Add Policy Select Available Modules from the Sub Nav Menu Check the box for 7-Zip 18.06 , Click Actions , Add Selected To Policy Click Actions then, Activate Policy Assign the Policy to the Software Deployment Test Group The next time any of the computers in that group startup or check-in, 7-Zip will automatically be installed.","title":"5. Deploy A Software Application In MSI Format"},{"location":"tutorials/first-policy/#6-deploy-a-software-application-in-exe-format","text":"An exe can be deployed as long as it support silent options. This last example will silently deploy Firefox. We\u2019ll use a dynamic group to find computers that do not have firefox installed. Finally we\u2019ll introduce a new concept called external downloads. Select Groups-> New From the Navigation Menu For the name , enter Computers Missing Firefox Change the Group Type to Dynamic Click Actions , Add Group Select Dynamic Criteria from the Sub Nav Menu Change the And/Or dropdown to Not , the Table to Application , the Field to name , the Operator to like , and the Value to %firefox% ,click Add Click Actions , Save Dynamic Criteria Select Modules->Command Modules->New from the Navigation menu . For the name enter, Firefox 64.0.2 Click Actions , Add Module Select External Files from the Sub Nav menu Fill in a File Name , such as Firefox.exe , it can be any name you like, it\u2019s just a name for the downloaded file. Fill in the URL with https://ftp.mozilla.org/pub/firefox/releases/64.0.2/win64/en-US/Firefox%20Setup%2064.0.2.exe Click Add , Click Actions , Download Files Click General from the Sub Navigation Menu Enter firefox.exe in the Command Field Enter -ms in the Arguments Field Click Actions , Update Module Assign the module to a new Policy and assign that Policy to a Group With this Policy, anytime a computer is found without Firefox, it will automatically be deployed to that computer.","title":"6. Deploy A Software Application In Exe Format"}]}